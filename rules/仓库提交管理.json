{"last_chapter_rule":"","pageList":[{"col_type":"text_1","name":"home","path":"home","rule":"js:\nvar d = [];\nd.push({\n    title: '<font color=\"#13B61B\">▐ </font><b>使用说明<b>',\n    url: \"hiker://empty\",\n    col_type: \"rich_text\",\n});\nd.push({\n    url: $(\"#noLoading#\").lazyRule(() => {\n        let rule = $.require(\"提交云仓库规则\").pass;\n        let pass = \"海阔视界规则分享，当前分享的是：提交云仓库规则￥publish￥\" + base64Encode(rule);\n        return \"rule://\" + base64Encode(pass);\n    }),\n    col_type: \"text_1\",\n    title: \"可以设置不同提交仓库方式[点我导入提交规则]\",\n    extra: {\n        lineVisible: false\n    }\n});\nd.push({\n    title: '<font color=\"#13B61B\">▐ </font><b>规则列表<b>',\n    col_type: \"rich_text\",\n});\nlet arr = $.require(\"configs\").getJson();\nfor (let i = 0; i < arr.length; i++) {\n    let it = arr[i];\n    d.push({\n        title: '““””<b>  ' + it.name + '<b>' + (it.forbidden ? \" #““禁用””\".small() : \"\"),\n        url: $([\"编辑\", \"账号\", \"分享\", \"禁用/启用\"]).select((index) => {\n            if (input === \"编辑\") {\n                return \"hiker://page/item#noRecordHistory##noHistory#\";\n            } else if (input === \"账号\") {\n                return \"hiker://page/password#noRecordHistory##noHistory#\";\n            } else if (input === \"分享\") {\n                let ops = getPastes();\n                ops.unshift(\"完整口令\");\n                return $(ops).select((index) => {\n                    let rule = $.require(\"configs\").getJson()[index];\n                    rule.user = undefined;\n                    rule.password = undefined;\n                    rule.extra = undefined;\n                    rule.forbidden = undefined;\n                    let ruleb64 = base64Encode(JSON.stringify(rule));\n                    let getPass = (name, rule, type) => \"海阔视界，「\" + name + \"」提交规则，复制整条口令打开软件就会自动导入$\" + rule + \"$\" + type + \"@import=js:$.require('import?rule='+\" + JSON.stringify(MY_RULE.title) + \")(input)\";\n                    if (input == \"完整口令\") {\n                        return \"copy://\" + getPass(rule.name, ruleb64, \"a\");\n                    } else {\n                        let u = sharePaste(ruleb64, input);\n                        return \"copy://\" + getPass(rule.name, u, \"b\");\n                    }\n                }, index);\n            } else {\n                let arr = $.require(\"configs\").getJson();\n                let rule = arr[index];\n                rule.forbidden = !rule.forbidden;\n                $.require(\"configs\").saveJson(arr);\n                refreshPage(false);\n                //return \"toast://\" + (rule.forbidden ? \"禁用\" : \"启用\") + rule.name;\n            }\n        }, i),\n        col_type: \"text_1\",\n        extra: {\n            i: i,\n            pageTitle: it.name\n        }\n    });\n}\n\n\nd.push({\n    title: \"新增\",\n    url: \"hiker://page/item#noRecordHistory##noHistory#\",\n    col_type: \"text_2\",\n    extra: {\n        pageTitle: \"新增提交规则\"\n    }\n});\nd.push({\n    title: \"编辑文件\",\n    url: \"editFile://\" + $.require(\"configs\").path,\n    col_type: \"text_2\",\n    desc: \"\",\n    pic_url: \"\"\n});\n\nsetResult(d);"},{"col_type":"movie_3","name":"item","path":"item","rule":"js:\nvar d = [];\naddListener(\"onClose\", $.toString(() => {\n    clearMyVar(\"ps_name\");\n    clearMyVar(\"ps_js\");\n}));\n\nlet index = MY_PARAMS.i;\nlet arr = $.require(\"configs\").getJson();\nlet obj;\nif (index !== void(0)) {\n    obj = arr[index];\n    setPageTitle(\"编辑规则:\" + obj.name);\n} else {\n    obj = {};\n    setPageTitle(\"新建规则\");\n}\n\nd.push({\n    col_type: \"input\",\n    desc: \"取个名字\",\n    extra: {\n        onChange: $.toString(() => {\n            putMyVar(\"ps_name\", input);\n        }),\n        defaultValue: obj.name,\n        titleVisible: false\n    }\n});\nd.push({\n    col_type: \"input\",\n    desc: \"JS代码\",\n    extra: {\n        type: \"textarea\",\n        height: 3,\n        highlight: true,\n        onChange: $.toString(() => {\n            putMyVar(\"ps_js\", input);\n        }),\n        defaultValue: obj.js,\n        titleVisible: false,\n    }\n});\n\nd.push({\n    title: \"删除\",\n    url: $(\"#noLoading#\").lazyRule((index) => {\n        if (index === void(0)) {\n            return \"toast://此项无法删除\"\n        }\n        confirm({\n            title: \"温馨提示\",\n            content: \"确定要删除此规则吗？注意删除后无法恢复\",\n            confirm: $.toString((index) => {\n                let arr = $.require(\"configs\").getJson();\n                arr.splice(index, 1);\n                $.require(\"configs\").saveJson(arr);\n                back(true);\n                return \"toast://删除成功\";\n            }, index)\n        });\n        return \"hiker://empty\"\n    }, index),\n    col_type: \"text_2\",\n});\n\nd.push({\n    title: \"保存\",\n    url: $(\"#noLoading#\").lazyRule((index) => {\n        let name = getMyVar(\"ps_name\", \"\");\n        if (name == \"\") {\n            return \"toast://名字得有一个吧\"\n        }\n        let js = getMyVar(\"ps_js\", \"\");\n        if (js == \"\") {\n            return \"toast://JS代码不能为空\"\n        }\n        let arr = $.require(\"configs\").getJson();\n        let obj1 = {\n            name: name,\n            js: js\n        };\n        if (index === void(0)) {\n            if (arr.some(v => v.name === name)) {\n                return \"toast://已经存在该规则\";\n            }\n            arr.unshift(obj1);\n        } else {\n            obj1 = Object.assign(arr[index], obj1);\n            arr.splice(index, 1, obj1);\n        }\n        $.require(\"configs\").saveJson(arr);\n        back(true);\n        return \"toast://保存成功\";\n    }, index),\n    col_type: \"text_2\",\n});\n\nsetResult(d);"},{"col_type":"movie_3","name":"configs","path":"configs","rule":"const path = \"hiker://files/rules/storehouse.json\";\n\nfunction getJson() {\n    try {\n        return JSON.parse(fetch(path) || \"[]\");\n    } catch (e) {\n        deleteFile(path);\n        return [];\n    }\n}\n\nfunction saveJson(json) {\n    writeFile(path, JSON.stringify(json));\n}\nfunction getUsefulJson(){\n    return getJson().filter(v=>!v.forbidden);\n}\n$.exports = {\n    getJson: getJson,\n    saveJson: saveJson,\n    getUsefulJson: getUsefulJson,\n    path: path\n};"},{"col_type":"movie_3","name":"password","path":"password","rule":"js:\n(function() {\n    var d = [];\n    addListener(\"onClose\", $.toString(() => {\n        clearMyVar(\"ps_user\");\n        clearMyVar(\"ps_password\");\n        clearMyVar(\"ps_ps_extra\");\n    }));\n    let index = MY_PARAMS.i;\n    let arr = $.require(\"configs\").getJson();\n    let rulename = getParam(\"name\", \"\") || MY_PARAMS.name;\n    if (index === void(0) && rulename) {\n        index = arr.findIndex(v => v.name === rulename);\n        if (index === -1) {\n            back(false);\n            toast(\"还没有该提交规则：\" + rulename);\n            return;\n        }\n    }\n    let obj = arr[index] || {};\n    if(MY_PARAMS.preinstall){\n        obj = Object.assign(obj,MY_PARAMS.preinstall);\n    }\n    setPageTitle(\"设置账号:\" + obj.name);\n    d.push({\n        col_type: \"input\",\n        desc: \"用户名\",\n        extra: {\n            onChange: $.toString(() => {\n                putMyVar(\"ps_user\", input);\n            }),\n            defaultValue: obj.user,\n            titleVisible: false\n        }\n    });\n    d.push({\n        col_type: \"input\",\n        desc: \"密码\",\n        extra: {\n            type: \"password\",\n            onChange: $.toString(() => {\n                putMyVar(\"ps_password\", input);\n            }),\n            defaultValue: obj.password,\n            titleVisible: false,\n        }\n    });\n    d.push({\n        col_type: \"input\",\n        desc: \"额外\",\n        extra: {\n            type: \"textarea\",\n            onChange: $.toString(() => {\n                putMyVar(\"ps_extra\", input);\n            }),\n            defaultValue: obj.extra,\n            titleVisible: false,\n            height: -1\n        }\n    });\n    d.push({\n        title: \"保存\",\n        url: $(\"#noLoading#\").lazyRule((index) => {\n            let user = getMyVar(\"ps_user\", \"\");\n            if (user == \"\") {\n                return \"toast://用户名不能为空\"\n            }\n            let password = getMyVar(\"ps_password\", \"\");\n            if (password == \"\") {\n                return \"toast://密码不能为空\"\n            }\n            let extra = getMyVar(\"ps_extra\", \"\");\n            let arr = $.require(\"configs\").getJson();\n            let item = arr[index];\n            item.user = user;\n            item.password = password;\n            item.extra = extra;\n            if (index === void(0)) {\n                return \"toast://id错误\";\n            } else {\n                arr.splice(index, 1, item);\n            }\n            $.require(\"configs\").saveJson(arr);\n            back(true);\n            return \"toast://保存成功\";\n        }, index),\n        col_type: \"text_center_1\",\n    });\n    setResult(d);\n})()"},{"col_type":"movie_3","name":"提交云仓库规则","path":"提交云仓库规则","rule":"$.exports.run = (ruleTitle) => {\n    let rules = $.require(\"configs?rule=\" + ruleTitle).getUsefulJson();\n    if (rules.length === 0) {\n        return \"提交失败:还没有设置提交规则\";\n    }\n    if (rules.length > 1) {\n        let names = rules.map(v => v.name);\n        names.unshift(\"““提交到所有仓库””\");\n        let desc;\n        if (Array.isArray(MY_RULE)) {\n            desc = \"提交分组:\" + MY_RULE[0].group;\n        } else {\n            desc = \"提交版本:\" + MY_RULE.version;\n        }\n        showSelectOptions({\n            title: \"请选择仓库[\" + desc + \"]\",\n            options: names,\n            col: 1,\n            js: $.toString((MY_RULE, ruleTitle) => {\n                let rules = $.require(\"configs?rule=\" + ruleTitle).getUsefulJson();\n                if (input === \"““提交到所有仓库””\") {\n                    let success = [];\n                    let fail = [];\n                    for (let rule of rules) {\n                        try {\n                            let func = new Function(\"MY_RULE\", \"MY_ACCOUNT\", \"MY_PASSWORD\",\"MY_EXTRA\", rule.js);\n                            let res = func(MY_RULE, rule.user, rule.password, rule.extra);\n                            if (res.includes(\"success\") || res.includes(\"成功\")) {\n                                success.push(rule.name + \":\" + res);\n                            } else {\n                                fail.push(rule.name + \":\" + res);\n                            }\n                        } catch (e) {\n                            fail.push(rule.name + \":\" + e.toString());\n                        }\n                    }\n                    let ress = `提交结果：${success.length}个成功，${fail.length}个失败`;\n                    log(ress);\n                    log(\"成功$：\\n\" + success.join(\"\\n\\n\"));\n                    log(\"失败$：\\n\" + fail.join(\"\\n\\n\"));\n                    toast(ress);\n                } else {\n                    let rule = rules.find(v => v.name === input);\n                    let func = new Function(\"MY_RULE\", \"MY_ACCOUNT\", \"MY_PASSWORD\", \"MY_EXTRA\", rule.js);\n                    toast(func(MY_RULE, rule.user, rule.password, rule.extra));\n                }\n            }, MY_RULE, ruleTitle)\n        });\n        return \"规则获取成功，待选择提交的仓库,请稍等...\";\n    } else {\n        let rule = rules[0];\n        let func = new Function(\"MY_RULE\", \"MY_ACCOUNT\", \"MY_PASSWORD\", \"MY_EXTRA\", rule.js);\n        return func(MY_RULE, rule.user, rule.password, rule.extra);\n    }\n}\n$.exports.pass = $.toString((ruleTitle) => $.require(\"提交云仓库规则?rule=\" + ruleTitle).run(ruleTitle), MY_RULE.title);"},{"col_type":"movie_3","name":"导入","path":"import","rule":"js:\n$.exports = function(pass) {\n    try {\n        pass = pass.split(\"$\");\n        let rule = pass[1];\n        let type = pass[2];\n        if (type === \"b\") {\n            rule = parsePaste(rule);\n        }\n        rule = JSON.parse(base64Decode(rule));\n        MY_URL = module.id;\n        let ruleTitle = getParam(\"rule\");\n        let arr = $.require(\"configs?rule=\" + ruleTitle).getJson();\n        let index = arr.findIndex(v => v.name === rule.name);\n        if (index > -1) {\n            rule = Object.assign(arr[index], rule);\n            arr.splice(index, 1, rule);\n            toast(\"已更新提交规则：\" + rule.name);\n        } else {\n            arr.unshift(rule);\n            toast(\"已导入提交规则：\" + rule.name);\n        }\n        $.require(\"configs?rule=\" + ruleTitle).saveJson(arr);\n    } catch (e) {\n        log(e.toString());\n        toast(\"导入失败\");\n    }\n}"}],"title":"仓库提交管理","author":"@LoyDgIk","version":4,"type":"tool","url":"hiker://empty###noRecordHistory##noHistory#","col_type":"text_1","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:$.require(\"home\");","searchFind":"","search_url":"","group":"开发中心","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"text_1\",\"name\":\"home\",\"path\":\"home\",\"rule\":\"js:\\nvar d = [];\\nd.push({\\n    title: '<font color=\\\"#13B61B\\\">▐ </font><b>使用说明<b>',\\n    url: \\\"hiker://empty\\\",\\n    col_type: \\\"rich_text\\\",\\n});\\nd.push({\\n    url: $(\\\"#noLoading#\\\").lazyRule(() => {\\n        let rule = $.require(\\\"提交云仓库规则\\\").pass;\\n        let pass = \\\"海阔视界规则分享，当前分享的是：提交云仓库规则￥publish￥\\\" + base64Encode(rule);\\n        return \\\"rule://\\\" + base64Encode(pass);\\n    }),\\n    col_type: \\\"text_1\\\",\\n    title: \\\"可以设置不同提交仓库方式[点我导入提交规则]\\\",\\n    extra: {\\n        lineVisible: false\\n    }\\n});\\nd.push({\\n    title: '<font color=\\\"#13B61B\\\">▐ </font><b>规则列表<b>',\\n    col_type: \\\"rich_text\\\",\\n});\\nlet arr = $.require(\\\"configs\\\").getJson();\\nfor (let i = 0; i < arr.length; i++) {\\n    let it = arr[i];\\n    d.push({\\n        title: '““””<b>  ' + it.name + '<b>' + (it.forbidden ? \\\" #““禁用””\\\".small() : \\\"\\\"),\\n        url: $([\\\"编辑\\\", \\\"账号\\\", \\\"分享\\\", \\\"禁用/启用\\\"]).select((index) => {\\n            if (input === \\\"编辑\\\") {\\n                return \\\"hiker://page/item#noRecordHistory##noHistory#\\\";\\n            } else if (input === \\\"账号\\\") {\\n                return \\\"hiker://page/password#noRecordHistory##noHistory#\\\";\\n            } else if (input === \\\"分享\\\") {\\n                let ops = getPastes();\\n                ops.unshift(\\\"完整口令\\\");\\n                return $(ops).select((index) => {\\n                    let rule = $.require(\\\"configs\\\").getJson()[index];\\n                    rule.user = undefined;\\n                    rule.password = undefined;\\n                    rule.extra = undefined;\\n                    rule.forbidden = undefined;\\n                    let ruleb64 = base64Encode(JSON.stringify(rule));\\n                    let getPass = (name, rule, type) => \\\"海阔视界，「\\\" + name + \\\"」提交规则，复制整条口令打开软件就会自动导入$\\\" + rule + \\\"$\\\" + type + \\\"@import=js:$.require('import?rule='+\\\" + JSON.stringify(MY_RULE.title) + \\\")(input)\\\";\\n                    if (input == \\\"完整口令\\\") {\\n                        return \\\"copy://\\\" + getPass(rule.name, ruleb64, \\\"a\\\");\\n                    } else {\\n                        let u = sharePaste(ruleb64, input);\\n                        return \\\"copy://\\\" + getPass(rule.name, u, \\\"b\\\");\\n                    }\\n                }, index);\\n            } else {\\n                let arr = $.require(\\\"configs\\\").getJson();\\n                let rule = arr[index];\\n                rule.forbidden = !rule.forbidden;\\n                $.require(\\\"configs\\\").saveJson(arr);\\n                refreshPage(false);\\n                //return \\\"toast://\\\" + (rule.forbidden ? \\\"禁用\\\" : \\\"启用\\\") + rule.name;\\n            }\\n        }, i),\\n        col_type: \\\"text_1\\\",\\n        extra: {\\n            i: i,\\n            pageTitle: it.name\\n        }\\n    });\\n}\\n\\n\\nd.push({\\n    title: \\\"新增\\\",\\n    url: \\\"hiker://page/item#noRecordHistory##noHistory#\\\",\\n    col_type: \\\"text_2\\\",\\n    extra: {\\n        pageTitle: \\\"新增提交规则\\\"\\n    }\\n});\\nd.push({\\n    title: \\\"编辑文件\\\",\\n    url: \\\"editFile://\\\" + $.require(\\\"configs\\\").path,\\n    col_type: \\\"text_2\\\",\\n    desc: \\\"\\\",\\n    pic_url: \\\"\\\"\\n});\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"item\",\"path\":\"item\",\"rule\":\"js:\\nvar d = [];\\naddListener(\\\"onClose\\\", $.toString(() => {\\n    clearMyVar(\\\"ps_name\\\");\\n    clearMyVar(\\\"ps_js\\\");\\n}));\\n\\nlet index = MY_PARAMS.i;\\nlet arr = $.require(\\\"configs\\\").getJson();\\nlet obj;\\nif (index !== void(0)) {\\n    obj = arr[index];\\n    setPageTitle(\\\"编辑规则:\\\" + obj.name);\\n} else {\\n    obj = {};\\n    setPageTitle(\\\"新建规则\\\");\\n}\\n\\nd.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"取个名字\\\",\\n    extra: {\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"ps_name\\\", input);\\n        }),\\n        defaultValue: obj.name,\\n        titleVisible: false\\n    }\\n});\\nd.push({\\n    col_type: \\\"input\\\",\\n    desc: \\\"JS代码\\\",\\n    extra: {\\n        type: \\\"textarea\\\",\\n        height: 3,\\n        highlight: true,\\n        onChange: $.toString(() => {\\n            putMyVar(\\\"ps_js\\\", input);\\n        }),\\n        defaultValue: obj.js,\\n        titleVisible: false,\\n    }\\n});\\n\\nd.push({\\n    title: \\\"删除\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((index) => {\\n        if (index === void(0)) {\\n            return \\\"toast://此项无法删除\\\"\\n        }\\n        confirm({\\n            title: \\\"温馨提示\\\",\\n            content: \\\"确定要删除此规则吗？注意删除后无法恢复\\\",\\n            confirm: $.toString((index) => {\\n                let arr = $.require(\\\"configs\\\").getJson();\\n                arr.splice(index, 1);\\n                $.require(\\\"configs\\\").saveJson(arr);\\n                back(true);\\n                return \\\"toast://删除成功\\\";\\n            }, index)\\n        });\\n        return \\\"hiker://empty\\\"\\n    }, index),\\n    col_type: \\\"text_2\\\",\\n});\\n\\nd.push({\\n    title: \\\"保存\\\",\\n    url: $(\\\"#noLoading#\\\").lazyRule((index) => {\\n        let name = getMyVar(\\\"ps_name\\\", \\\"\\\");\\n        if (name == \\\"\\\") {\\n            return \\\"toast://名字得有一个吧\\\"\\n        }\\n        let js = getMyVar(\\\"ps_js\\\", \\\"\\\");\\n        if (js == \\\"\\\") {\\n            return \\\"toast://JS代码不能为空\\\"\\n        }\\n        let arr = $.require(\\\"configs\\\").getJson();\\n        let obj1 = {\\n            name: name,\\n            js: js\\n        };\\n        if (index === void(0)) {\\n            if (arr.some(v => v.name === name)) {\\n                return \\\"toast://已经存在该规则\\\";\\n            }\\n            arr.unshift(obj1);\\n        } else {\\n            obj1 = Object.assign(arr[index], obj1);\\n            arr.splice(index, 1, obj1);\\n        }\\n        $.require(\\\"configs\\\").saveJson(arr);\\n        back(true);\\n        return \\\"toast://保存成功\\\";\\n    }, index),\\n    col_type: \\\"text_2\\\",\\n});\\n\\nsetResult(d);\"},{\"col_type\":\"movie_3\",\"name\":\"configs\",\"path\":\"configs\",\"rule\":\"const path = \\\"hiker://files/rules/storehouse.json\\\";\\n\\nfunction getJson() {\\n    try {\\n        return JSON.parse(fetch(path) || \\\"[]\\\");\\n    } catch (e) {\\n        deleteFile(path);\\n        return [];\\n    }\\n}\\n\\nfunction saveJson(json) {\\n    writeFile(path, JSON.stringify(json));\\n}\\nfunction getUsefulJson(){\\n    return getJson().filter(v=>!v.forbidden);\\n}\\n$.exports = {\\n    getJson: getJson,\\n    saveJson: saveJson,\\n    getUsefulJson: getUsefulJson,\\n    path: path\\n};\"},{\"col_type\":\"movie_3\",\"name\":\"password\",\"path\":\"password\",\"rule\":\"js:\\n(function() {\\n    var d = [];\\n    addListener(\\\"onClose\\\", $.toString(() => {\\n        clearMyVar(\\\"ps_user\\\");\\n        clearMyVar(\\\"ps_password\\\");\\n        clearMyVar(\\\"ps_ps_extra\\\");\\n    }));\\n    let index = MY_PARAMS.i;\\n    let arr = $.require(\\\"configs\\\").getJson();\\n    let rulename = getParam(\\\"name\\\", \\\"\\\") || MY_PARAMS.name;\\n    if (index === void(0) && rulename) {\\n        index = arr.findIndex(v => v.name === rulename);\\n        if (index === -1) {\\n            back(false);\\n            toast(\\\"还没有该提交规则：\\\" + rulename);\\n            return;\\n        }\\n    }\\n    let obj = arr[index] || {};\\n    if(MY_PARAMS.preinstall){\\n        obj = Object.assign(obj,MY_PARAMS.preinstall);\\n    }\\n    setPageTitle(\\\"设置账号:\\\" + obj.name);\\n    d.push({\\n        col_type: \\\"input\\\",\\n        desc: \\\"用户名\\\",\\n        extra: {\\n            onChange: $.toString(() => {\\n                putMyVar(\\\"ps_user\\\", input);\\n            }),\\n            defaultValue: obj.user,\\n            titleVisible: false\\n        }\\n    });\\n    d.push({\\n        col_type: \\\"input\\\",\\n        desc: \\\"密码\\\",\\n        extra: {\\n            type: \\\"password\\\",\\n            onChange: $.toString(() => {\\n                putMyVar(\\\"ps_password\\\", input);\\n            }),\\n            defaultValue: obj.password,\\n            titleVisible: false,\\n        }\\n    });\\n    d.push({\\n        col_type: \\\"input\\\",\\n        desc: \\\"额外\\\",\\n        extra: {\\n            type: \\\"textarea\\\",\\n            onChange: $.toString(() => {\\n                putMyVar(\\\"ps_extra\\\", input);\\n            }),\\n            defaultValue: obj.extra,\\n            titleVisible: false,\\n            height: -1\\n        }\\n    });\\n    d.push({\\n        title: \\\"保存\\\",\\n        url: $(\\\"#noLoading#\\\").lazyRule((index) => {\\n            let user = getMyVar(\\\"ps_user\\\", \\\"\\\");\\n            if (user == \\\"\\\") {\\n                return \\\"toast://用户名不能为空\\\"\\n            }\\n            let password = getMyVar(\\\"ps_password\\\", \\\"\\\");\\n            if (password == \\\"\\\") {\\n                return \\\"toast://密码不能为空\\\"\\n            }\\n            let extra = getMyVar(\\\"ps_extra\\\", \\\"\\\");\\n            let arr = $.require(\\\"configs\\\").getJson();\\n            let item = arr[index];\\n            item.user = user;\\n            item.password = password;\\n            item.extra = extra;\\n            if (index === void(0)) {\\n                return \\\"toast://id错误\\\";\\n            } else {\\n                arr.splice(index, 1, item);\\n            }\\n            $.require(\\\"configs\\\").saveJson(arr);\\n            back(true);\\n            return \\\"toast://保存成功\\\";\\n        }, index),\\n        col_type: \\\"text_center_1\\\",\\n    });\\n    setResult(d);\\n})()\"},{\"col_type\":\"movie_3\",\"name\":\"提交云仓库规则\",\"path\":\"提交云仓库规则\",\"rule\":\"$.exports.run = (ruleTitle) => {\\n    let rules = $.require(\\\"configs?rule=\\\" + ruleTitle).getUsefulJson();\\n    if (rules.length === 0) {\\n        return \\\"提交失败:还没有设置提交规则\\\";\\n    }\\n    if (rules.length > 1) {\\n        let names = rules.map(v => v.name);\\n        names.unshift(\\\"““提交到所有仓库””\\\");\\n        let desc;\\n        if (Array.isArray(MY_RULE)) {\\n            desc = \\\"提交分组:\\\" + MY_RULE[0].group;\\n        } else {\\n            desc = \\\"提交版本:\\\" + MY_RULE.version;\\n        }\\n        showSelectOptions({\\n            title: \\\"请选择仓库[\\\" + desc + \\\"]\\\",\\n            options: names,\\n            col: 1,\\n            js: $.toString((MY_RULE, ruleTitle) => {\\n                let rules = $.require(\\\"configs?rule=\\\" + ruleTitle).getUsefulJson();\\n                if (input === \\\"““提交到所有仓库””\\\") {\\n                    let success = [];\\n                    let fail = [];\\n                    for (let rule of rules) {\\n                        try {\\n                            let func = new Function(\\\"MY_RULE\\\", \\\"MY_ACCOUNT\\\", \\\"MY_PASSWORD\\\",\\\"MY_EXTRA\\\", rule.js);\\n                            let res = func(MY_RULE, rule.user, rule.password, rule.extra);\\n                            if (res.includes(\\\"success\\\") || res.includes(\\\"成功\\\")) {\\n                                success.push(rule.name + \\\":\\\" + res);\\n                            } else {\\n                                fail.push(rule.name + \\\":\\\" + res);\\n                            }\\n                        } catch (e) {\\n                            fail.push(rule.name + \\\":\\\" + e.toString());\\n                        }\\n                    }\\n                    let ress = `提交结果：${success.length}个成功，${fail.length}个失败`;\\n                    log(ress);\\n                    log(\\\"成功$：\\\\n\\\" + success.join(\\\"\\\\n\\\\n\\\"));\\n                    log(\\\"失败$：\\\\n\\\" + fail.join(\\\"\\\\n\\\\n\\\"));\\n                    toast(ress);\\n                } else {\\n                    let rule = rules.find(v => v.name === input);\\n                    let func = new Function(\\\"MY_RULE\\\", \\\"MY_ACCOUNT\\\", \\\"MY_PASSWORD\\\", \\\"MY_EXTRA\\\", rule.js);\\n                    toast(func(MY_RULE, rule.user, rule.password, rule.extra));\\n                }\\n            }, MY_RULE, ruleTitle)\\n        });\\n        return \\\"规则获取成功，待选择提交的仓库,请稍等...\\\";\\n    } else {\\n        let rule = rules[0];\\n        let func = new Function(\\\"MY_RULE\\\", \\\"MY_ACCOUNT\\\", \\\"MY_PASSWORD\\\", \\\"MY_EXTRA\\\", rule.js);\\n        return func(MY_RULE, rule.user, rule.password, rule.extra);\\n    }\\n}\\n$.exports.pass = $.toString((ruleTitle) => $.require(\\\"提交云仓库规则?rule=\\\" + ruleTitle).run(ruleTitle), MY_RULE.title);\"},{\"col_type\":\"movie_3\",\"name\":\"导入\",\"path\":\"import\",\"rule\":\"js:\\n$.exports = function(pass) {\\n    try {\\n        pass = pass.split(\\\"$\\\");\\n        let rule = pass[1];\\n        let type = pass[2];\\n        if (type === \\\"b\\\") {\\n            rule = parsePaste(rule);\\n        }\\n        rule = JSON.parse(base64Decode(rule));\\n        MY_URL = module.id;\\n        let ruleTitle = getParam(\\\"rule\\\");\\n        let arr = $.require(\\\"configs?rule=\\\" + ruleTitle).getJson();\\n        let index = arr.findIndex(v => v.name === rule.name);\\n        if (index > -1) {\\n            rule = Object.assign(arr[index], rule);\\n            arr.splice(index, 1, rule);\\n            toast(\\\"已更新提交规则：\\\" + rule.name);\\n        } else {\\n            arr.unshift(rule);\\n            toast(\\\"已导入提交规则：\\\" + rule.name);\\n        }\\n        $.require(\\\"configs?rule=\\\" + ruleTitle).saveJson(arr);\\n    } catch (e) {\\n        log(e.toString());\\n        toast(\\\"导入失败\\\");\\n    }\\n}\"}]","proxy":"","icon":"https://hikerfans.com/tubiao/system/25.png"}