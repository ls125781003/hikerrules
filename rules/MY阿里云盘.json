{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"Ëá™Â∑±ÂµåÂ•óÈ°µÈù¢","path":"selfruleloop","rule":"var d = [];\n\nfunction formatDate(_date, fmt) {\n    let date = !isNaN(_date) ? new Date(_date * 1000) : new Date(_date);\n    return $.dateFormat(date, fmt || \"yyyy-MM-dd HH:mm:ss\")\n}\n\nfunction formatSize(size) {\n    if (!size) {\n        return '';\n    }\n    const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i = 0;\n    while (size >= 1024) {\n        size /= 1024;\n        i++;\n    }\n    size = i ? Number(size.toFixed(2)) : size;\n    return `${size} ${units[i]}`;\n}\nif (MY_PAGE == 1) {\n    clearMyVar('nextpage');\n}\nif (MY_PAGE > 1 && getMyVar('nextpage', '') == '') {\n    log('Ê≤°Êúâ‰∏ã‰∏ÄÈ°µ');\n} else {\n    var tokenjson = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}))[0];\n    var reftoken = tokenjson.refresh_token;\n    var reaccessTk = tokenjson.token_type + ' ' + tokenjson.access_token;\n\n    let next = getMyVar('nextpage', '') != '' ? ',\"marker\":\"' + getMyVar('nextpage') + '\"' : '';\n    var OpenToken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-OpenToken.json', {}));\n    /*\n        var rescod = fetch('https://api.aliyundrive.com/adrive/v3/file/list', {\n            headers: {\n                'Content-Type': 'application/json',\n                'authorization': getMyVar(\"aliaccessTk\", \"\")\n            },\n            body: '{\"drive_id\":\"' + drivid + '\",\"parent_file_id\":\"' + getResCode().split('???')[0] + '\",\"limit\":100,\"all\":true,\"url_expire_sec\":86400,\"image_thumbnail_process\":\"image/resize,w_160/format,jpeg\",\"image_url_process\":\"image\\/resize,w_1920/format,jpeg\",\"video_thumbnail_process\":\"video/snapshot,t_1000,f_jpg,ar_auto,w_300\",\"order_by\":\"name\",\"order_direction\":\"ASC\"' + next + '}',\n            method: 'POST'\n        });\n     */\n    let bodyy = '{\"drive_id\":\"' + drivid + '\",\"parent_file_id\":\"' + getResCode().split('???')[0] + '\",\"limit\":100,\"all\":true,\"url_expire_sec\":86400,\"image_thumbnail_process\":\"image/resize,w_160/format,jpeg\",\"image_url_process\":\"image\\/resize,w_1920/format,jpeg\",\"video_thumbnail_process\":\"video/snapshot,t_1000,f_jpg,ar_auto,w_300\",\"order_by\":\"name\",\"order_direction\":\"ASC\"' + next + '}';\n\n    var rescod = $.require(\"hiker://page/getlist\").getlists(bodyy,reaccessTk);\n\n    if (rescod.includes(\"ParamFlowException\")) {\n        refreshPage();\n    }\n    //log(rescod);\n    if (JSON.parse(rescod).next_marker) {\n        let marker = JSON.parse(rescod).next_marker;\n        if (marker.length > 10) {\n            putMyVar('nextpage', marker);\n        } else {\n            clearMyVar('nextpage');\n        }\n    }\n    var conts = JSON.parse(rescod).items;\n    //log(conts);\n    var tuisong = [];\n    var zimu = [];\n    for (let i in conts) {\n        //var listyp = conts[i].type;\n        if (conts[i].type != 'folder') {\n            let fname = conts[i].name;\n            let ftype = fname.toLowerCase();\n            let cate = conts[i].category;\n            if (ftype.endsWith('.srt') || ftype.endsWith('.vtt') || ftype.endsWith('.ass')) {\n                zimu.push({\n                    tit: fname.substring(0, fname.lastIndexOf(\".\")),\n                    ext: conts[i].file_extension,\n                    fid: conts[i].file_id\n                });\n            };\n            if (cate == 'video' || cate == 'audio') {\n                tuisong.push(\n                    fname.replace(/\\#/g, '_').replace(/\\$/g, '_') + '$' + cate + '|' + conts[i].file_id\n                );\n            };\n        }\n    }\n    var dongtai = JSON.parse(fetch('hiker://page/selflazyurl', {})).rule.toString();\n    for (var i in conts) {\n\n        var listyp = conts[i].type;\n        if (listyp != 'folder') {\n            var cate = conts[i].category;\n            var fname = conts[i].name;\n            if (cate == 'video') {\n                var title = 'üì∫' + conts[i].name;\n            } else if (cate == 'doc') {\n                var title = 'üìñ' + conts[i].name;\n            } else if (cate == 'image') {\n                var title = 'üñº' + conts[i].name;\n            } else if (cate == 'zip') {\n                var title = 'üì¶' + conts[i].name;\n            } else {\n                var title = conts[i].name\n            }\n            d.push({\n                title: title,\n                url: $(conts[i].download_url ? conts[i].download_url : conts[i].file_id).lazyRule((xdrivid, drivid, dongtai, cate, fname, zimu) => {\n                    eval(dongtai);\n                    return play\n                }, xdrivid, drivid, dongtai, cate, fname, zimu),\n                desc: formatDate(conts[i].updated_at) + '  ' + formatSize(conts[i].size),\n                extra: {\n                    longClick: [{\n                        title: 'Êé®ÈÄÅÂà∞TVBox',\n                        js: $.toString((drivid, fileid, cate, fname, reftoken) => {\n                            return 'hiker://page/push?rule=XYQÊé®ÈÄÅ&pushurl=' + encodeURIComponent(JSON.stringify({\n                                \"name\": fname,\n                                \"refresh_token\": reftoken,\n                                \"url\": fname.replace(/\\#/g, '_').replace(/\\$/g, '_') + '$' + cate + '|' + fileid,\n                                \"default_drive_id\": drivid\n                            }));\n                        }, drivid, conts[i].file_id, cate, fname, reftoken)\n                    }, {\n                        title: 'Âà†Èô§ÂΩìÂâçÊñá‰ª∂',\n                        js: $.toString((drivid, fileid, reaccessTk) => {\n                            return \"confirm://Á°ÆËÆ§Âà†Èô§Ê≠§Êñá‰ª∂ÔºüÊó†Ê≥ïÊÅ¢Â§çÁöÑÂìü„ÄÇ.js:\" + $.toString((drivid, fileid, reaccessTk) => {\n                                let rep = JSON.parse(fetch('https://api.aliyundrive.com/adrive/v2/batch', {\n                                    headers: {\n                                        'User-Agent': PC_UA,\n                                        'Referer': 'https://www.aliyundrive.com/',\n                                        'authorization': reaccessTk,\n                                        'x-canary': 'client=web,app=share,version=v2.3.1'\n                                        //'x-share-token': sharetoken\n\n                                    },\n                                    body: {\n                                        \"requests\": [{\n                                            \"body\": {\n                                                \"drive_id\": drivid,\n                                                \"file_id\": fileid\n                                            },\n                                            \"headers\": {\n                                                \"Content-Type\": \"application/json\"\n                                            },\n                                            \"id\": fileid,\n                                            \"method\": \"POST\",\n                                            \"url\": \"/file/delete\"\n                                        }],\n                                        \"resource\": \"file\"\n                                    },\n                                    method: 'POST'\n                                }));\n                                if (rep.responses[0].status == 204) {\n                                    refreshPage();\n                                    return 'toast://Âà†Èô§ÊàêÂäü'\n                                }\n                                //log(rep);\n                                return 'hiker://empty'\n                            }, drivid, fileid, reaccessTk);\n                        }, drivid, conts[i].file_id, reaccessTk)\n\n                    }],\n                    id: conts[i].file_id\n                },\n                col_type: 'text_1'\n\n            });\n        } else {\n            d.push({\n                title: 'üìÇ' + conts[i].name,\n                url: $('hiker://empty' + conts[i].file_id + '???fypage').rule((xdrivid, drivid, pushname) => {\n                    eval(JSON.parse(fetch('hiker://page/selfruleloop', {})).rule);\n                }, xdrivid, drivid, conts[i].name),\n                col_type: 'flex_button'\n            });\n\n        } //end if\n\n\n    }\n    let pushfold = \"https://www.aliyundrive.com/drive/folder/\" + getResCode().split('???')[0];\n    eval(JSON.parse(fetch('hiker://page/pushcode', {})).rule);\n}\nsetHomeResult({\n    data: d\n});"},{"col_type":"movie_3","name":"Ëá™Â∑±Âä®ÊÄÅËß£Êûê","path":"selflazyurl","rule":"var defdriveid = getMyVar('defdriveid', drivid),\n    reaccessTk = getMyVar(\"aliaccessTk\", ''),\n    timeToken = getMyVar('timeToken', '0'),\n    resdriveid = getMyVar('resdriveid', ''),\n    ftype = fname.toLowerCase();\n//deviceId = getMyVar('deviceId', \"\"),\n//userId = getMyVar('userId', \"\");\n\nfunction accessTok() {\n    if (reaccessTk == '' || (parseInt(timeToken) - parseInt(new Date().getTime() / 1000)).toString() <= 3600) {\n        let ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\n        var reftoken = ntoken[0].refresh_token;\n        let refresh = fetch('https://auth.aliyundrive.com/v2/account/token', {\n            headers: {\n                'Content-Type': 'application/json; charset=utf-8',\n                'User-Agent': PC_UA,\n                'Referer': 'https://www.aliyundrive.com/'\n            },\n            body: '{\"refresh_token\":\"' + reftoken + '\",\"grant_type\":\"refresh_token\"}',\n            method: 'POST'\n        });\n        ntoken[0] = JSON.parse(refresh);\n        if (!fileExist(\"hiker://files/rules/icy/icy-ali-token.json\") || refresh.length > 300) {\n            writeFile(\"hiker://files/rules/icy/icy-ali-token.json\", JSON.stringify(ntoken));\n        }\n        //var deviceId = JSON.parse(refresh).device_id;\n        //putMyVar('deviceId', deviceId);\n        putMyVar('timeToken', (parseInt(JSON.parse(refresh).expires_in) + parseInt(new Date().getTime() / 1000)).toString());\n        defdriveid = JSON.parse(refresh).default_drive_id;\n        //putMyVar('defdriveid', defdriveid);\n        var userId = JSON.parse(refresh).user_id;\n        //putMyVar('userId', userId);\n        reaccessTk = JSON.parse(refresh).token_type + ' ' + JSON.parse(refresh).access_token;\n        putMyVar(\"aliaccessTk\", reaccessTk);\n        let userresinfo = JSON.parse(fetch(\"https://user.aliyundrive.com/v2/user/get\", {\n            headers: {\n                'content-type': 'application/json',\n                'User-Agent': PC_UA,\n                \"authorization\": accessTk,\n                'Referer': 'https://www.aliyundrive.com/'\n            },\n            body: {},\n            method: 'POST'\n        }));\n        if (userresinfo.resource_drive_id) {\n            resdriveid = userresinfo.resource_drive_id;\n            putMyVar('resdriveid', resdriveid);\n        }\n    }\n}\naccessTok();\nconst transcoding = {\n    UHD: \"4K Ë∂ÖÊ∏Ö\",\n    QHD: \"2K Ë∂ÖÊ∏Ö\",\n    FHD: \"1080 ÂÖ®È´òÊ∏Ö\",\n    HD: \"720 È´òÊ∏Ö\",\n    SD: \"540 Ê†áÊ∏Ö\",\n    LD: \"360 ÊµÅÁïÖ\"\n};\nif (!fileExist(\"hiker://files/rules/icy/icy-ali-OpenToken.json\")) {\n    var OpenToken = {\n        'RefreshTokenOpen': '',\n        'AccessTokenOpen': ''\n    };\n    oauthRequest();\n} else {\n    var OpenToken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-OpenToken.json', {}));\n}\n\nfunction getsub(zmfid, zmext) {\n    try {\n        let zimul = open(zmfid, defdriveid);\n        downloadFile(zimul, 'hiker://files/download/subtitling.' + zmext, {\n            'Referer': 'https://www.aliyundrive.com/'\n        });\n        return getPath('hiker://files/download/subtitling.' + zmext)\n    } catch (e) {\n        return \"\";\n    }\n}\n//Â§ÑÁêÜËßÜÈ¢ë  \nvar dfid = input;\n\nfunction oauthRequest() {\n    try {\n        let json = fetch('https://open.aliyundrive.com/oauth/users/authorize?client_id=' + '76917ccccd4441c39457a04f6084fb2f' + '&redirect_uri=https://alist.nn.ci/tool/aliyundrive/callback&scope=user:base,file:all:read,file:all:write&state=', {\n            headers: {\n                'User-Agent': PC_UA,\n                'Referer': 'https://www.aliyundrive.com/',\n                'authorization': reaccessTk, //getAccessToken\n                'x-canary': 'client=web,app=adrive,version=v4.1.1'\n\n            },\n            body: {\n                \"authorize\": 1,\n                \"scope\": \"user:base,file:all:read,file:all:write\"\n            },\n            method: 'POST'\n        });\n        //log('oauthreq\\n' + json);\n        if (json.includes('AccessTokenExpired')) {\n            reaccessTk = '';\n            accessTok();\n        }\n        let code = JSON.parse(json).redirectUri.split(\"code=\")[1];\n        oauthRedirect(code);\n    } catch (e) {\n        reaccessTk = '';\n        accessTok();\n    }\n};\n\nfunction oauthRedirect(code) {\n    try {\n        if (getMyVar('ored', '1') != '0') {\n            let json = fetch('https://api.xhofe.top/alist/ali_open/code', {\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/'\n\n                },\n                body: {\n                    \"code\": code,\n                    \"grant_type\": \"authorization_code\"\n                },\n                method: 'POST'\n            });\n            if (json == \"\" || !JSON.parse(json)) {\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                    headers: {\n                        'User-Agent': PC_UA,\n                        'Referer': 'https://www.aliyundrive.com/'\n\n                    },\n                    body: {\n                        \"code\": code,\n                        \"grant_type\": \"authorization_code\"\n                    },\n                    method: 'POST'\n                });\n            }\n            //log(json);\n            log('Ëé∑ÂèñRefreshTokenOpen');\n            if (json.includes('Too Many Requests')) {\n                putMyVar('ored', '0');\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                return '';\n            } else {\n                putMyVar('ored', '1');\n                if (JSON.parse(json).refresh_token) {\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\n                    OpenToken.RefreshTokenOpen = getRefreshTokenOpen;\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\n                    OpenToken.AccessTokenOpen = getAccessTokenOpen;\n                    writeFile(\"hiker://files/rules/icy/icy-ali-OpenToken.json\", JSON.stringify(OpenToken));\n                    putMyVar('redirect', '1');\n                }\n            }\n        }\n    } catch (e) {}\n};\n\nfunction refreshOpenToken() {\n    try {\n        if (getMyVar('rot', '1') != '0') {\n            let json = fetch('https://api.xhofe.top/alist/ali_open/token', {\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/'\n                },\n                body: {\n                    'grant_type': 'refresh_token',\n                    'refresh_token': OpenToken.RefreshTokenOpen\n                },\n                method: 'POST'\n            });\n            if (json == \"\" || !JSON.parse(json)) {\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                    headers: {\n                        'User-Agent': PC_UA,\n                        'Referer': 'https://www.aliyundrive.com/'\n                    },\n                    body: {\n                        'grant_type': 'refresh_token',\n                        'refresh_token': OpenToken.RefreshTokenOpen\n                    },\n                    method: 'POST'\n                });\n            }\n            log('Ëé∑ÂèñAccessTokenOpen');\n            if (json.includes('Too Many Requests')) {\n                putMyVar('rot', '0');\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                return '';\n            } else {\n                putMyVar('rot', '1');\n                if (JSON.parse(json).refresh_token) {\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\n                    OpenToken.RefreshTokenOpen = getRefreshTokenOpen;\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\n                    OpenToken.AccessTokenOpen = getAccessTokenOpen;\n                    writeFile(\"hiker://files/rules/icy/icy-ali-OpenToken.json\", JSON.stringify(OpenToken));\n                }\n            }\n        }\n    } catch (e) {}\n};\n\nfunction open(fileId, defdriveid) {\n    try {\n        let json = \"\";\n        let number = 0;\n        do {\n            json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getDownloadUrl', {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/',\n                    'authorization': OpenToken.AccessTokenOpen\n                    //getAccessTokenOpen\n\n                },\n                body: {\n                    'file_id': fileId,\n                    'drive_id': defdriveid\n                },\n                method: 'POST'\n            });\n            //log('open\\n' + json);\n            if (json.includes('\"url\":\"http')) {\n                break;\n            }\n            if (json.includes(\"TooManyRequests\")) {\n                //deletee(fileId);\n                toast('Too Many Requests');\n                log('TooManyRequests');\n                //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\n            }\n            if (getMyVar('redirect', '0') == '0') {\n                accessTok();\n                oauthRequest();\n            } else {\n                refreshOpenToken();\n            }\n\n            number++\n        } while (number < 2);\n        return JSON.parse(json).url;\n    } catch (e) {\n        return 'hiker://empty'\n    }\n};\n\n/*\nfunction getQuality(taskList) {\n    let orders = [\"UHD\", \"QHD\", \"FHD\", \"HD\", \"SD\", \"LD\"];\n    for (let or of orders) {\n        for (let i = 0; i < taskList.length; i++) {\n            let task = taskList[i];\n            if (task.template_id == or) {\n                return task.url;\n            }\n        }\n    }\n    return taskList[0].url;\n};\n\nfunction openPre(fileId, defdriveid) {\n    try {\n        let json = \"\";\n        let number = 0;\n        do {\n            json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getVideoPreviewPlayInfo', {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/',\n                    'authorization': OpenToken.AccessTokenOpen\n                    //getAccessTokenOpen\n\n                },\n                body: {\n                    'file_id': fileId,\n                    'drive_id': defdriveid,\n                    'category': 'live_transcoding',\n                    'url_expire_sec': '14400'\n                },\n                method: 'POST'\n            });\n            //log('openpre\\n' + json);\n            if (json.includes('\"url\":\"http')) {\n                break;\n            }\n            if (json.includes(\"TooManyRequests\")) {\n                //deletee(fileId);\n                toast('Too Many Requests');\n                log('TooManyRequests');\n                //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\n            }\n            if (getMyVar('redirect', '0') == '0') {\n                oauthRequest();\n            }\n            number++\n        } while (number < 2);\n\n        let taskList = JSON.parse(json).video_preview_play_info.live_transcoding_task_list;\n        //log(taskList);\n        return getQuality(taskList);\n    } catch (e) {\n        return 'hiker://empty'\n    }\n};\ndefdriveid = getItem('alideviceid', '1') == '1' ? defdriveid:resdriveid;\nif (cate == 'video' || cate == 'audio') {\n    if (cate == 'audio') {\n        var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\n    } else {\n\n        if (getItem('quality', '1') == '1') {\n            var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\n        } else {\n            var play = openPre(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\n        }\n        if (zimu.length > 0) {\n            for (let i in zimu) {\n                var zimut = zimu[i].tit;\n                if (fname.includes(zimut) || zimut.includes(fname.substring(0, fname.lastIndexOf('.')))) {\n                    play = JSON.stringify({\n                        urls: [play.split(';{')[0]],\n                        headers: [{\n                            'Referer': 'https://www.aliyundrive.com/'\n                        }],\n                        subtitle: getsub(zimu[i].fid, zimu[i].ext)\n                    })\n                    break;\n                }\n            }\n        }\n    }\n\n} else if (cate == 'image') {\n    var loclink = open(dfid, defdriveid);\n    //log(loclink);\n    var play = 'pics://' + loclink + '@Referer=https://www.aliyundrive.com/';\n} else if (ftype.endsWith('.srt') || ftype.endsWith('.vtt') || ftype.endsWith('.ass')) {\n\n    var zimul = open(dfid, defdriveid);\n    downloadFile(zimul, 'hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\".\")), {\n        'Referer': 'https://www.aliyundrive.com/'\n    });\n    var play = 'toast://Â≠óÂπïÊñá‰ª∂Â∑≤‰∏ãËΩΩÂà∞hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\".\"))\n    // + ';{Referer@https://www.aliyundrive.com/}';\n} else {\n    var play = 'toast://ËØ•Ê†ºÂºèÊöÇÊú™ÊîØÊåÅÔºåÁõÆÂâçÂè™ÊîØÊåÅÊü•ÁúãËßÜÈ¢ëÂíåÂõæÁâá„ÄÇ'\n}\n*/\nfunction aliSharePlayUrl(fileId, defdriveid, OpenToken) {\n    try {\n        let json = \"\";\n        let number = 0;\n        let aliyunUrl = [];\n        do {\n            json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getVideoPreviewPlayInfo', {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/',\n                    'authorization': OpenToken.AccessTokenOpen\n                    //getAccessTokenOpen\n\n                },\n                body: {\n                    'file_id': fileId,\n                    'drive_id': defdriveid,\n                    'category': 'live_transcoding',\n                    'url_expire_sec': '14400'\n                },\n                method: 'POST'\n            });\n            //log('openpre\\n' + json);\n            if (json.includes('\"url\":\"http')) {\n                break;\n            }\n            if (json.includes(\"TooManyRequests\")) {\n                //deletee(fileId);\n                toast('Too Many Requests');\n                log('TooManyRequests');\n                //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\n            }\n            if (getMyVar('redirect', '0') == '0') {\n                oauthRequest();\n            }\n            number++\n        } while (number < 2);\n\n        aliyunUrl = JSON.parse(json).video_preview_play_info.live_transcoding_task_list;\n        aliyunUrl.reverse();\n\n        return aliyunUrl;\n    } catch (e) {\n        log('aliSharePlayUrlÊä•Èîô>' + e.message);\n        return \"\";\n    }\n}\n\nfunction getAliUrl(file_id, defdriveid, OpenToken, playUrlList) {\n    try {\n        let urls = [];\n        let names = [];\n        let heads = [];\n        let u = startProxyServer($.toString((file_id, defdriveid, OpenToken) => {\n\n            function refreshOpenToken() {\n                try {\n                    if (getMyVar('rot', '1') != '0') {\n                        let json = fetch('https://api.xhofe.top/alist/ali_open/token', {\n                            //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                            headers: {\n                                'User-Agent': PC_UA,\n                                'Referer': 'https://www.aliyundrive.com/'\n                            },\n                            body: {\n                                'grant_type': 'refresh_token',\n                                'refresh_token': OpenToken.RefreshTokenOpen\n                            },\n                            method: 'POST'\n                        });\n                        if (json == \"\" || !JSON.parse(json)) {\n                            json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                                headers: {\n                                    'User-Agent': PC_UA,\n                                    'Referer': 'https://www.aliyundrive.com/'\n                                },\n                                body: {\n                                    'grant_type': 'refresh_token',\n                                    'refresh_token': OpenToken.RefreshTokenOpen\n                                },\n                                method: 'POST'\n                            });\n                        }\n                        log('Ëé∑ÂèñAccessTokenOpen');\n                        if (json.includes('Too Many Requests')) {\n                            putMyVar('rot', '0');\n                            toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                            log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                            return '';\n                        } else {\n                            putMyVar('rot', '1');\n                            if (JSON.parse(json).refresh_token) {\n                                let getRefreshTokenOpen = JSON.parse(json).refresh_token;\n                                OpenToken.RefreshTokenOpen = getRefreshTokenOpen;\n                                let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\n                                OpenToken.AccessTokenOpen = getAccessTokenOpen;\n                                writeFile(\"hiker://files/rules/icy/icy-ali-OpenToken.json\", JSON.stringify(OpenToken));\n                            }\n                        }\n                    }\n                } catch (e) {}\n            };\n\n\n            function aliSharePlayUrl(fileId, defdriveid, OpenToken) {\n                try {\n                    let json = \"\";\n                    let number = 0;\n                    if (getMyVar('rot', '1') != '0') {\n                        refreshOpenToken();\n                    }\n                    let aliyunUrl = [];\n                    do {\n                        json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getVideoPreviewPlayInfo', {\n                            headers: {\n                                'User-Agent': PC_UA,\n                                'Referer': 'https://www.aliyundrive.com/',\n                                'authorization': OpenToken.AccessTokenOpen\n                                //getAccessTokenOpen\n\n                            },\n                            body: {\n                                'file_id': fileId,\n                                'drive_id': defdriveid,\n                                'category': 'live_transcoding',\n                                'url_expire_sec': '14400'\n                            },\n                            method: 'POST'\n                        });\n                        //log('openpre\\n' + json);\n                        if (json.includes('\"url\":\"http')) {\n                            break;\n                        }\n                        if (json.includes(\"TooManyRequests\")) {\n                            //deletee(fileId);\n                            toast('Too Many Requests');\n                            log('TooManyRequests');\n                            //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\n                        }\n\n                        number++\n                    } while (number < 2);\n\n                    aliyunUrl = JSON.parse(json).video_preview_play_info.live_transcoding_task_list;\n                    aliyunUrl.reverse();\n\n                    return aliyunUrl;\n                } catch (e) {\n                    log('aliSharePlayUrlÊä•Èîô>' + e.message);\n                    return \"\";\n                }\n            }\n\n            function geturl(fileid, line) {\n                //È¢ÑÂä†ËΩΩÊó∂‰ºöÂèòfile_id,ÊâÄ‰ª•tsËøáÊúüÊõ¥Êñ∞Êó∂ËøòÂèñÂéüÊù•ÁöÑid\n                let playUrlList = aliSharePlayUrl(fileid, defdriveid, OpenToken) || [];\n                let aliurl;\n                playUrlList.forEach((item) => {\n                    if (item.template_id == line) {\n                        aliurl = item.url;\n                    }\n                })\n                //‰∏äÈù¢ÊòØËé∑ÂèñÈòøÈáåÁöÑÊí≠ÊîæÂú∞ÂùÄ\n                //log(\"ÊàëÂú®‰ª£ÁêÜ\" + aliurl);\n                let home = aliurl.split('media.m3u8')[0];\n                let f = fetch(aliurl, {\n                    headers: {\n                        'User-Agent': PC_UA,\n                        'Referer': 'https://www.aliyundrive.com/'\n                    },\n                    timeout: 3000\n                }).split(\"\\n\");\n                let ff = f.map(it => {\n                    if (it.startsWith(\"media-\")) {\n                        return \"/proxy?url=\" + base64Encode(home + it);\n                    }\n                    return it;\n                }).join(\"\\n\");\n                //log('ufid-'+fileid);\n                writeFile('hiker://files/cache/_fileSelect_' + fileid + '.m3u8', ff);\n                return ff;\n            }\n\n            let url = base64Decode(MY_PARAMS.url);\n            if (url.includes(\".ts\")) {\n                let fid = url.split('&f=')[1].split('&')[0];\n                //log('sfid-'+fid);\n                let f = fetch('hiker://files/cache/_fileSelect_' + fid + '.m3u8').split(\"\\n\");\n                f.forEach(it => {\n                    if (it && it.startsWith('/proxy?url=')) {\n                        let furl = base64Decode(it.replace('/proxy?url=', ''));\n                        if (url.substr(url.indexOf('/media-'), url.indexOf('.ts')) == furl.substr(furl.indexOf('/media-'), furl.indexOf('.ts'))) {\n                            url = furl;\n                        }\n                    }\n                })\n                let expires = url.split('x-oss-expires=')[1].split('&')[0];\n                const lasttime = parseInt(expires) - Date.now() / 1000;\n                if (lasttime < 60) {\n                    //log('ËøáÊúüÊõ¥Êñ∞')\n                    let line = url.split('/media')[0]; //Âèñ‰πãÂâçÊí≠ÊîæÁöÑtsÊÆµÁ∫øË∑Ø\n                    line = line.substring(line.lastIndexOf('/') + 1);\n                    let f = geturl(fid, line).split(\"\\n\");\n                    f.forEach(it => {\n                        if (it && it.startsWith('/proxy?url=')) {\n                            let furl = base64Decode(it.replace('/proxy?url=', ''));\n                            if (url.substr(url.indexOf('/media-'), url.indexOf('.ts')) == furl.substr(furl.indexOf('/media-'), furl.indexOf('.ts'))) {\n                                url = furl;\n                            }\n                        }\n                    })\n\n                } else {\n                    //log('Êú™ËøáÊúü')\n                    //log(\"‰ª£ÁêÜtsÔºö\" + url);\n                }\n                return JSON.stringify({\n                    statusCode: 302,\n                    headers: {\n                        \"Location\": url,\n                        \"User-Agent\": PC_UA,\n                        'Referer': 'https://www.aliyundrive.com/'\n                    }\n                });\n            } else {\n                //log('È¶ñÊ¨°Êõ¥Êñ∞')\n                let line = url.split('|')[1];\n                let ff = geturl(file_id, line);\n                return ff;\n            }\n        }, file_id, defdriveid, OpenToken));\n\n        //let playUrlList = aliSharePlayUrl(file_id, defdriveid,OpenToken,oauthRequest,oauthRedirect,reaccessTk) || [];\n\n        if (playUrlList.length > 0) {\n            playUrlList.forEach((item) => {\n                urls.push(u + \"?url=\" + base64Encode(item.url + \"|\" + item.template_id) + \"#.m3u8\");\n                names.push(transcoding[item.template_id] ? transcoding[item.template_id] : item.template_height);\n                heads.push({\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/'\n                });\n            })\n            var mult = {\n                urls: urls,\n                names: names,\n                headers: heads\n            };\n            if (zimu.length > 0) {\n                for (let i in zimu) {\n                    var zimut = zimu[i].tit;\n                    if (fname.includes(zimut) || zimut.includes(fname.substring(0, fname.lastIndexOf('.')))) {\n                        mult['subtitle'] = getsub(zimu[i].fid, zimu[i].ext);\n                        break;\n                    }\n                }\n            }\n\n            return mult;\n        } else {\n            log('Êú™Ëé∑ÂèñÈòøÈáåÊí≠ÊîæÂú∞ÂùÄÔºåÂª∫ËÆÆÈáçËøõËΩØ‰ª∂ÂÜçËØï‰∏ÄÊ¨°')\n            return {};\n        }\n    } catch (e) {\n        log('getAliUrlÊä•Èîô>' + e.message);\n        return {};\n    }\n}\n\ndefdriveid = getItem('alideviceid', '1') == '1' ? defdriveid : resdriveid;\n\nif (cate == 'video' || cate == 'audio') {\n    if (cate == 'audio') {\n        var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\n    } else {\n\n        if (getItem('quality', '1') == '1') {\n            var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\n            if (zimu.length > 0) {\n                for (let i in zimu) {\n                    var zimut = zimu[i].tit;\n                    if (fname.includes(zimut) || zimut.includes(fname.substring(0, fname.lastIndexOf('.')))) {\n                        play = JSON.stringify({\n                            urls: [play.split(';{')[0]],\n                            headers: [{\n                                'Referer': 'https://www.aliyundrive.com/'\n                            }],\n                            subtitle: getsub(zimu[i].fid, zimu[i].ext)\n                        })\n                        break;\n                    }\n                }\n            }\n        } else {\n            //var play = openPre(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\n            let playUrlList = aliSharePlayUrl(dfid, defdriveid, OpenToken) || [];\n\n\n            var play = JSON.stringify(getAliUrl(\n                dfid,\n                defdriveid,\n                OpenToken,\n                playUrlList\n            ));\n        }\n\n    }\n\n} else if (cate == 'image') {\n    var loclink = open(dfid, defdriveid);\n    //log(loclink);\n    var play = 'pics://' + loclink + '@Referer=https://www.aliyundrive.com/';\n} else if (ftype.endsWith('.srt') || ftype.endsWith('.vtt') || ftype.endsWith('.ass')) {\n\n    var zimul = open(dfid, defdriveid);\n    downloadFile(zimul, 'hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\".\")), {\n        'Referer': 'https://www.aliyundrive.com/'\n    });\n    var play = 'toast://Â≠óÂπïÊñá‰ª∂Â∑≤‰∏ãËΩΩÂà∞hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\".\"))\n    // + ';{Referer@https://www.aliyundrive.com/}';\n} else {\n    var play = 'toast://ËØ•Ê†ºÂºèÊöÇÊú™ÊîØÊåÅÔºåÁõÆÂâçÂè™ÊîØÊåÅÊü•ÁúãËßÜÈ¢ëÂíåÂõæÁâá„ÄÇ'\n}"},{"col_type":"movie_3","name":"Êé®ÈÄÅ‰ª£Á†Å","path":"pushcode","rule":"js:\n//Êé®ÈÄÅ‰ª£Á†Å\nlet push = JSON.stringify({\n    \"name\": pushname,\n    \"url\": tuisong.join('#'),\n    \"default_drive_id\": drivid,\n    \"refresh_token\": tokenjson.refresh_token\n}).replace(/\\&/g, 'ÔºÜÔºÜ');\nlet fold = JSON.stringify({\n    \"name\": pushname,\n    \"url\": pushfold,\n    \"default_drive_id\": drivid,\n    \"refresh_token\": tokenjson.refresh_token\n}).replace(/\\&/g, 'ÔºÜÔºÜ');\n//log(push);\n//log(tuisong.length);\nif (tuisong.length > 0) {\n    d.unshift({\n        title: \"Êé®ÈÄÅÂΩìÂâçÁõÆÂΩïÂà∞TVBox\",\n        url: $(fold).lazyRule(() => {\n            return 'hiker://page/push?rule=XYQÊé®ÈÄÅ&pushurl=' + encodeURIComponent(input);\n        }),\n        col_type: \"scroll_button\"\n    });\n    d.unshift({\n        title: \"Êé®ÈÄÅÂΩìÂâçÈ°µÈü≥ËßÜÈ¢ëÂà∞TVBox\",\n        url: $(push).lazyRule(() => {\n            return 'hiker://page/push?rule=XYQÊé®ÈÄÅ&pushurl=' + encodeURIComponent(input);\n        }),\n        col_type: \"scroll_button\"\n    });\n    d.unshift({\n        title: (getItem('quality', '1') == '1' ? 'ÂéüÁîªÊí≠‚àö' : 'ËΩ¨Á†ÅÊí≠‚àö'),\n        url: `hiker://empty@lazyRule=.js:getItem('quality','1')=='1'?setItem('quality','0'):setItem('quality','1');refreshPage();'toast://ÂàáÊç¢ÊàêÂäüÔºÅ'`,\n        col_type: 'scroll_button'\n    });\n}\n//"},{"col_type":"movie_3","name":"ÁôªÂÖ•Ë¥¶Âè∑","path":"Login","rule":"d.push({\n    title: \"‚õÖÔ∏èÁÇπÊàëÁΩëÈ°µÁôªÂΩï\",\n    url: $(\"hiker://empty###noRecordHistory##noHistory#\").rule(() => {\n        let d = [];\n        let ntoken = [];\n        if (fileExist(\"hiker://files/rules/icy/icy-ali-token.json\")) {\n            ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\n        }\n        let url = 'https://www.aliyundrive.com/sign'\n        let js = $.toString((ntoken) => {\n            const tokenFunction = function() {\n                var stor = \"\";\n                if (localStorage.getItem('token') != null) {\n                    stor = localStorage.getItem(\"token\");\n                } else {\n                    stor = sessionStorage.getItem(\"token\");\n                }\n                var token = JSON.parse(stor);\n                if (token && token.user_id) {\n                    let alistfile = \"hiker://files/rules/icy/icy-ali-token.json\";\n                    ntoken[0] = token;\n                    fy_bridge_app.writeFile(alistfile, JSON.stringify(ntoken));\n                    localStorage.clear();\n                    alert('TOKENËé∑ÂèñÊàêÂäüÔºåËøîÂõûÂêéÂà∑Êñ∞È°µÈù¢ÔºÅ');\n                    fy_bridge_app.parseLazyRule(`hiker://empty@lazyRule=.js:refreshX5WebView('');`);\n                    fy_bridge_app.back();\n                    return;\n                } else {\n                    token_timer();\n                }\n            }\n            var token_timer = function() {\n                setTimeout(tokenFunction, 500)\n            };\n            tokenFunction();\n        }, ntoken)\n        d.push({\n            url: url,\n            col_type: 'x5_webview_single',\n            desc: '100%&&float',\n            extra: {\n                canBack: true,\n                ua: PC_UA,\n                js: js\n            }\n        })\n        setResult(d);\n    }),\n    col_type: 'text_2'\n});\nd.push({\n    title: \"‚õÖÔ∏èÁÇπÊàëTokenÁôªÂΩï\",\n    url: $(\"\", \"ËæìÂÖ•32‰ΩçÈòøÈáåToken\").input(() => {\n        let reftoken = input.trim();\n        let ntoken = [];\n        if (reftoken.length == 32) {\n            var refresh = fetch('https://auth.aliyundrive.com/v2/account/token', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/'\n                },\n                body: '{\"refresh_token\":\"' + reftoken + '\",\"grant_type\":\"refresh_token\"}',\n                method: 'POST'\n            });\n            //log(refresh);\n            if (refresh.includes('\"refresh_token\"')) {\n                ntoken[0] = JSON.parse(refresh);\n                writeFile(\"hiker://files/rules/icy/icy-ali-token.json\", JSON.stringify(ntoken));\n                refreshPage();\n                return 'hiker://empty'\n            }\n        }\n        return 'toast://ÁôªÂÖ•Â§±Ë¥•ÔºåÂèØËÉΩTokenÊòØÊó†ÊïàÁöÑ„ÄÇ'\n    }),\n    col_type: 'text_2'\n});"},{"col_type":"movie_3","name":"Ëé∑ÂèñÂàóË°®","path":"getlist","rule":"js:\nvar OpenToken = {};\n\nfunction accessTok() {\n    let ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\n    let reftoken = ntoken[0].refresh_token;\n    let refresh = fetch('https://auth.aliyundrive.com/v2/account/token', {\n        headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n            'User-Agent': PC_UA,\n            'Referer': 'https://www.aliyundrive.com/'\n        },\n        body: '{\"refresh_token\":\"' + reftoken + '\",\"grant_type\":\"refresh_token\"}',\n        method: 'POST'\n    });\n    ntoken[0] = JSON.parse(refresh);\n    if (!fileExist(\"hiker://files/rules/icy/icy-ali-token.json\") || refresh.length > 300) {\n        writeFile(\"hiker://files/rules/icy/icy-ali-token.json\", JSON.stringify(ntoken));\n    }\n    reaccessTk = JSON.parse(refresh).token_type + ' ' + JSON.parse(refresh).access_token;\n};\n\nfunction oauthRequest() {\n    try {\n        let json = fetch('https://open.aliyundrive.com/oauth/users/authorize?client_id=' + '76917ccccd4441c39457a04f6084fb2f' + '&redirect_uri=https://alist.nn.ci/tool/aliyundrive/callback&scope=user:base,file:all:read,file:all:write&state=', {\n            headers: {\n                'User-Agent': PC_UA,\n                'Referer': 'https://www.aliyundrive.com/',\n                'authorization': reaccessTk, //getAccessToken\n                'x-canary': 'client=web,app=adrive,version=v4.1.1'\n\n            },\n            body: {\n                \"authorize\": 1,\n                \"scope\": \"user:base,file:all:read,file:all:write\"\n            },\n            method: 'POST'\n        });\n        //log('oauthreq\\n' + json);\n        if (json.includes('AccessTokenExpired')) {\n            reaccessTk = '';\n            accessTok();\n        }\n        let code = JSON.parse(json).redirectUri.split(\"code=\")[1];\n        oauthRedirect(code);\n    } catch (e) {\n        reaccessTk = '';\n        accessTok();\n    }\n};\n\nfunction oauthRedirect(code) {\n    try {\n        if (getMyVar('ored', '1') != '0') {\n            let json = fetch('https://api.xhofe.top/alist/ali_open/code', {\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/'\n\n                },\n                body: {\n                    \"code\": code,\n                    \"grant_type\": \"authorization_code\"\n                },\n                method: 'POST'\n            });\n            if (json == \"\" || !JSON.parse(json)) {\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                    headers: {\n                        'User-Agent': PC_UA,\n                        'Referer': 'https://www.aliyundrive.com/'\n\n                    },\n                    body: {\n                        \"code\": code,\n                        \"grant_type\": \"authorization_code\"\n                    },\n                    method: 'POST'\n                });\n            }\n            //log(json);\n            log('Ëé∑ÂèñRefreshTokenOpen');\n            if (json.includes('Too Many Requests')) {\n                putMyVar('ored', '0');\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                return '';\n            } else {\n                putMyVar('ored', '1');\n                if (JSON.parse(json).refresh_token) {\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\n                    OpenToken = {\n                        'RefreshTokenOpen': getRefreshTokenOpen,\n                        'AccessTokenOpen': getAccessTokenOpen\n                    };\n                    writeFile(\"hiker://files/rules/icy/icy-ali-OpenToken.json\", JSON.stringify(OpenToken));\n                    putMyVar('redirect', '1');\n                }\n            }\n        }\n    } catch (e) {}\n};\n\nfunction refreshOpenToken() {\n    try {\n        if (getMyVar('rot', '1') != '0') {\n            let json = fetch('https://api.xhofe.top/alist/ali_open/token', {\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                headers: {\n                    'User-Agent': PC_UA,\n                    'Referer': 'https://www.aliyundrive.com/'\n                },\n                body: {\n                    'grant_type': 'refresh_token',\n                    'refresh_token': OpenToken.RefreshTokenOpen\n                },\n                method: 'POST'\n            });\n            if (json == \"\" || !JSON.parse(json)) {\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\n                    headers: {\n                        'User-Agent': PC_UA,\n                        'Referer': 'https://www.aliyundrive.com/'\n                    },\n                    body: {\n                        'grant_type': 'refresh_token',\n                        'refresh_token': OpenToken.RefreshTokenOpen\n                    },\n                    method: 'POST'\n                });\n            }\n            log('Ëé∑ÂèñAccessTokenOpen');\n            if (json.includes('Too Many Requests')) {\n                putMyVar('rot', '0');\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\n                return '';\n            } else {\n                putMyVar('rot', '1');\n                if (JSON.parse(json).refresh_token) {\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\n                    OpenToken = {\n                        'RefreshTokenOpen': getRefreshTokenOpen,\n                        'AccessTokenOpen': getAccessTokenOpen\n                    };\n                    writeFile(\"hiker://files/rules/icy/icy-ali-OpenToken.json\", JSON.stringify(OpenToken));\n                }\n            }\n        }\n    } catch (e) {}\n};\n\nfunction getopenacctoken() {\n    if (!fileExist(\"hiker://files/rules/icy/icy-ali-OpenToken.json\")) {\n        oauthRequest();\n    } else {\n        OpenToken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-OpenToken.json', {}));\n    }\n    return OpenToken.AccessTokenOpen;\n}\n\n\n$.exports.getlists = function(bodydata, reaccessTk) {\n    let json = \"\";\n    let number = 0;\n    do {\n        json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/list', {\n            headers: {\n                'User-Agent': PC_UA,\n                'Referer': 'https://www.aliyundrive.com/',\n                'authorization': getopenacctoken()\n\n            },\n            body: bodydata,\n            method: 'POST'\n        });\n\n        if (json.includes('\"next_marker\"')) {\n            break;\n        }\n        if (json.includes(\"TooManyRequests\")) {\n            //deletee(fileId);\n            toast('Too Many Requests');\n            log('TooManyRequests');\n            //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\n        }\n        if (getMyVar('redirect', '0') == '0') {\n            accessTok();\n            oauthRequest();\n        } else {\n            refreshOpenToken();\n        }\n        number++\n    } while (number < 2);\n\n    return json\n}"}],"title":"MYÈòøÈáå‰∫ëÁõò","author":"È¶ôÈõÖÊÉÖ","version":1,"type":"tool","url":"hiker://empty???fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\n\nfunction formatDate(_date, fmt) {\n    let date = !isNaN(_date) ? new Date(_date * 1000) : new Date(_date);\n    return $.dateFormat(date, fmt || \"yyyy-MM-dd HH:mm:ss\")\n}\n\nfunction formatSize(size) {\n    if (!size) {\n        return '';\n    }\n    const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    let i = 0;\n    while (size >= 1024) {\n        size /= 1024;\n        i++;\n    }\n    size = i ? Number(size.toFixed(2)) : size;\n    return `${size} ${units[i]}`;\n}\nif (MY_PAGE == 1) {\n    d.push({\n        title: (getItem('alideviceid', '1') == '1' ? 'Â§á‰ªΩÁõò‚àö' : 'Â§á‰ªΩÁõò'),\n        url: `hiker://empty@lazyRule=.js:getItem('alideviceid','1')=='1'?setItem('alideviceid','0'):setItem('alideviceid','1');refreshPage();'toast://ÂàáÊç¢ÊàêÂäüÔºÅ'`,\n        col_type: \"text_3\",\n        desc: \"\",\n        pic_url: \"\"\n    });\n    d.push({\n        title: (getItem('alideviceid', '1') == '0' ? 'ËµÑÊ∫êÁõò‚àö' : 'ËµÑÊ∫êÁõò'),\n        url: `hiker://empty@lazyRule=.js:getItem('alideviceid','1')=='0'?setItem('alideviceid','1'):setItem('alideviceid','0');refreshPage();'toast://ÂàáÊç¢ÊàêÂäüÔºÅ'`,\n        col_type: \"text_3\",\n        desc: \"\",\n        pic_url: \"\"\n    });\n\n    d.push({\n        title: '‰∫ëÁõòÂêõ(Êé®ÈÄÅ)',\n        url: 'hiker://home@‰∫ëÁõòÂêõ(Êé®ÈÄÅ)',\n        col_type: \"text_3\",\n        desc: \"\",\n        pic_url: \"\"\n    });\n\n}\nif (!fileExist(\"hiker://files/rules/icy/icy-ali-token.json\")) {\n    eval(JSON.parse(fetch(\"hiker://page/Login\")).rule);\n} else {\n    try {\n        //////\n        if (MY_PAGE == 1) {\n            clearMyVar('nextpage');\n        }\n        if (MY_PAGE > 1 && getMyVar('nextpage', '') == '') {\n            log('Ê≤°Êúâ‰∏ã‰∏ÄÈ°µ');\n        } else {\n            var tokenjson = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}))[0];\n\n            if (tokenjson != undefined && tokenjson.refresh_token) {\n                var drivid = getItem('alideviceid', '1') == '1' ? tokenjson.default_drive_id : getMyVar('resdriveid', '');\n\n                var xdrivid = tokenjson.device_id;\n                var reftoken = tokenjson.refresh_token;\n                var reaccessTk = tokenjson.token_type + ' ' + tokenjson.access_token;\n\n                d.push({\n                    title: 'ÂΩìÂâçÁî®Êà∑Ôºö' + tokenjson.nick_name + ' ' + tokenjson.user_name,\n                    url: $('hiker://empty#noRecordHistory#').rule(() => {\n                        let d = [];\n                        d.push({\n                            title: \"ÈÄÄÂá∫ÁôªÂΩï\",\n                            url: $('hiker://empty#noRecordHistory#').lazyRule(() => {\n                                let ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\n                                //ntoken.splice(0, 1);\n                                //ntoken.shift();\n                                ntoken[0] = {};\n                                writeFile(\"hiker://files/rules/icy/icy-ali-token.json\", JSON.stringify(ntoken));\n                                back(true);\n                                return \"hiker://empty\";\n                            }),\n                            col_type: \"text_center_1\"\n                        });\n                        setHomeResult(d);\n                    }),\n                    col_type: \"avatar\",\n                    pic_url: tokenjson.avatar\n                });\n\n                d.push({\n                    title: tokenjson.refresh_token,\n                    url: $(tokenjson.refresh_token).lazyRule(() => {\n                        return 'copy://' + input\n                    }),\n                    col_type: \"text_1\",\n                    desc: \"\",\n                    pic_url: \"\"\n                });\n\n                let next = getMyVar('nextpage', '') != '' ? ',\"marker\":\"' + getMyVar('nextpage') + '\"' : '';\n/*\n                var selfroot = fetch('https://api.aliyundrive.com/adrive/v3/file/list', {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'authorization': reaccessTk\n                    },\n                    body: '{\"drive_id\":\"' + drivid + '\",\"parent_file_id\":\"root\",\"limit\":100,\"all\":true,\"url_expire_sec\":86400,\"image_thumbnail_process\":\"image/resize,w_400/format,jpeg\",\"image_url_process\":\"image/resize,w_1920/format,jpeg\",\"video_thumbnail_process\":\"video/snapshot,t_1000,f_jpg,ar_auto,w_300\",\"order_by\":\"name\",\"order_direction\":\"ASC\"' + next + '}',\n                    method: 'POST'\n                });\n                //log(selfroot);\n                */\n                var bodyy = '{\"drive_id\":\"' + drivid + '\",\"parent_file_id\":\"root\",\"limit\":100,\"all\":true,\"url_expire_sec\":86400,\"image_thumbnail_process\":\"image/resize,w_400/format,jpeg\",\"image_url_process\":\"image/resize,w_1920/format,jpeg\",\"video_thumbnail_process\":\"video/snapshot,t_1000,f_jpg,ar_auto,w_300\",\"order_by\":\"name\",\"order_direction\":\"ASC\"' + next + '}';\n\n                var selfroot = $.require(\"hiker://page/getlist\").getlists(bodyy,reaccessTk);\n                \n                if (selfroot.includes(\"ParamFlowException\")) {\n                    refreshPage();\n                }\n                if (JSON.parse(selfroot).next_marker) {\n                    let marker = JSON.parse(selfroot).next_marker;\n                    if (marker.length > 10) {\n                        putMyVar('nextpage', marker);\n                    } else {\n                        clearMyVar('nextpage');\n                    }\n                }\n\n\n                var conts = JSON.parse(selfroot).items;\n                var dongtai = JSON.parse(fetch('hiker://page/selflazyurl', {})).rule.toString();\n                var tuisong = [];\n                var zimu = [];\n                for (let i in conts) {\n                    //var listyp = conts[i].type;\n                    if (conts[i].type != 'folder') {\n                        let fname = conts[i].name;\n                        let ftype = fname.toLowerCase();\n                        let cate = conts[i].category;\n                        if (ftype.endsWith('.srt') || ftype.endsWith('.vtt') || ftype.endsWith('.ass')) {\n                            zimu.push({\n                                tit: fname.substring(0, fname.lastIndexOf(\".\")),\n                                ext: conts[i].file_extension,\n                                fid: conts[i].file_id\n                            });\n                        };\n                        if (cate == 'video' || cate == 'audio') {\n                            tuisong.push(\n                                fname.replace(/\\#/g, '_').replace(/\\$/g, '_') + '$' + cate + '|' + conts[i].file_id\n                            );\n                        };\n                    }\n                }\n                for (var i in conts) {\n                    var listyp = conts[i].type;\n                    if (listyp != 'folder') {\n                        var cate = conts[i].category;\n                        var fname = conts[i].name;\n                        if (cate == 'video') {\n                            var title = 'üì∫' + conts[i].name;\n                        } else if (cate == 'doc') {\n                            var title = 'üìñ' + conts[i].name;\n                        } else if (cate == 'image') {\n                            var title = 'üñº' + conts[i].name;\n                        } else if (cate == 'zip') {\n                            var title = 'üì¶' + conts[i].name;\n                        } else {\n                            var title = conts[i].name\n                        }\n                        d.push({\n                            title: title,\n                            url: $(conts[i].download_url ? conts[i].download_url : conts[i].file_id).lazyRule((xdrivid, drivid, dongtai, cate, fname, zimu) => {\n                                eval(dongtai);\n                                return play\n                            }, xdrivid, drivid, dongtai, cate, fname, zimu),\n                            desc: formatDate(conts[i].updated_at) + '  ' + formatSize(conts[i].size),\n                            extra: {\n                                longClick: [{\n                                    title: 'Êé®ÈÄÅÂà∞TVBox',\n                                    js: $.toString((drivid, fileid, cate, fname, reftoken) => {\n                                        return 'hiker://page/push?rule=XYQÊé®ÈÄÅ&pushurl=' + encodeURIComponent(JSON.stringify({\n                                            \"name\": fname,\n                                            \"refresh_token\": reftoken,\n                                            \"url\": fname.replace(/\\#/g, '_').replace(/\\$/g, '_') + '$' + cate + '|' + fileid,\n                                            \"default_drive_id\": drivid\n                                        }));\n                                    }, drivid, conts[i].file_id, cate, fname, reftoken)\n                                }, {\n                                    title: 'Âà†Èô§ÂΩìÂâçÊñá‰ª∂',\n                                    js: $.toString((drivid, fileid, reaccessTk) => {\n                                        return \"confirm://Á°ÆËÆ§Âà†Èô§Ê≠§Êñá‰ª∂ÔºüÊó†Ê≥ïÊÅ¢Â§çÁöÑÂìü„ÄÇ.js:\" + $.toString((drivid, fileid, reaccessTk) => {\n                                            let rep = JSON.parse(fetch('https://api.aliyundrive.com/adrive/v2/batch', {\n                                                headers: {\n                                                    'User-Agent': PC_UA,\n                                                    'Referer': 'https://www.aliyundrive.com/',\n                                                    'authorization': reaccessTk,\n                                                    'x-canary': 'client=web,app=share,version=v2.3.1'\n                                                    //'x-share-token': sharetoken\n\n                                                },\n                                                body: {\n                                                    \"requests\": [{\n                                                        \"body\": {\n                                                            \"drive_id\": drivid,\n                                                            \"file_id\": fileid\n                                                        },\n                                                        \"headers\": {\n                                                            \"Content-Type\": \"application/json\"\n                                                        },\n                                                        \"id\": fileid,\n                                                        \"method\": \"POST\",\n                                                        \"url\": \"/file/delete\"\n                                                    }],\n                                                    \"resource\": \"file\"\n                                                },\n                                                method: 'POST'\n                                            }));\n                                            if (rep.responses[0].status == 204) {\n                                                refreshPage();\n                                                return 'toast://Âà†Èô§ÊàêÂäü'\n                                            }\n                                            //log(rep);\n                                            return 'hiker://empty'\n                                        }, drivid, fileid, reaccessTk);\n                                    }, drivid, conts[i].file_id, reaccessTk)\n\n                                }],\n                                id: conts[i].file_id\n                            },\n                            col_type: 'text_1'\n\n                        });\n                    } else {\n                        d.push({\n                            title: 'üìÇ' + conts[i].name,\n                            url: $('hiker://empty' + conts[i].file_id + '???fypage').rule((xdrivid, drivid, pushname) => {\n                                eval(JSON.parse(fetch('hiker://page/selfruleloop', {})).rule);\n                            }, xdrivid, drivid, conts[i].name),\n                            col_type: 'flex_button'\n                        });\n\n                    } //end if\n                }\n                let pushname = \"ÁΩëÁõòÊ†πÁõÆÂΩï\"\n                let pushfold = \"https://www.aliyundrive.com/drive\";\n                eval(JSON.parse(fetch('hiker://page/pushcode', {})).rule);\n            } else {\n                eval(JSON.parse(fetch(\"hiker://page/Login\")).rule);\n            }\n        }\n        //Êé®ÈÄÅ‰ª£Á†ÅÁªìÊùü\n    } catch (e) {\n        //return \"\";\n    }\n}\nsetHomeResult({\n    data: d\n});","searchFind":"","search_url":"","group":"‚ë°Êé®ÈÄÅ","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"let reaccessTk = getMyVar(\"aliaccessTk\", '');\nlet timeToken = getMyVar('timeToken', '0');\nif (reaccessTk == '' || (parseInt(timeToken) - parseInt(new Date().getTime() / 1000)).toString() <= 3600) {\n    let ntoken = [];\n    let reftoken = \"\";\n    if (!fileExist(\"hiker://files/rules/icy/icy-ali-token.json\")) {\n        toast('Áî®Êà∑‰ø°ÊÅØËé∑ÂèñÂ§±Ë¥•ÔºåËØ∑ÁôªÂÖ•Ë¥¶Âè∑„ÄÇ');\n    } else {\n        ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\n        //log(ntoken.length);\n        if (ntoken.length > 0 && ntoken[0].refresh_token) {\n            reftoken = ntoken[0].refresh_token;\n        } else {\n            toast('Áî®Êà∑‰ø°ÊÅØËé∑ÂèñÂ§±Ë¥•ÔºåËØ∑ÁôªÂÖ•Ë¥¶Âè∑„ÄÇ');\n        }\n    }\n    if (reftoken.length == 32) {\n        var refresh = fetch('https://auth.aliyundrive.com/v2/account/token', {\n            headers: {\n                'Content-Type': 'application/json',\n                'User-Agent': PC_UA,\n                'Referer': 'https://www.aliyundrive.com/'\n            },\n            body: '{\"refresh_token\":\"' + reftoken + '\",\"grant_type\":\"refresh_token\"}',\n            method: 'POST'\n        });\n        //log(refresh);\n        ntoken[0] = JSON.parse(refresh);\n        writeFile(\"hiker://files/rules/icy/icy-ali-token.json\", JSON.stringify(ntoken));\n        log('ËøêË°åÈ¢ÑÂ§ÑÁêÜ');\n        if (!fileExist(\"hiker://files/rules/icy/icy-ali-token.json\") || refresh.length > 300) {\n            var refresh = fetch('hiker://files/rules/icy/icy-ali-token.json', {});\n            putMyVar('timeToken', (parseInt(JSON.parse(refresh)[0].expires_in) + parseInt(new Date().getTime() / 1000)).toString());\n            let defdriveid = JSON.parse(refresh)[0].default_drive_id;\n            putMyVar('defdriveid', defdriveid);\n            let accessTk = JSON.parse(refresh)[0].token_type + ' ' + JSON.parse(refresh)[0].access_token;\n            putMyVar(\"aliaccessTk\", accessTk);\n            //var userId = JSON.parse(refresh).user_id;\n            //putMyVar('userId', userId);\n            //var deviceId = JSON.parse(refresh).device_id;\n            //putMyVar('deviceId', deviceId);\n            let userresinfo = JSON.parse(fetch(\"https://user.aliyundrive.com/v2/user/get\", {\n                headers: {\n                    'content-type': 'application/json',\n                    'User-Agent': PC_UA,\n                    \"authorization\": accessTk,\n                    'Referer': 'https://www.aliyundrive.com/'\n                },\n                body: {},\n                method: 'POST'\n            }));\n            if (userresinfo.resource_drive_id) {\n                let resdriveid = userresinfo.resource_drive_id;\n                putMyVar('resdriveid', resdriveid);\n            }\n        }\n    }\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"Ëá™Â∑±ÂµåÂ•óÈ°µÈù¢\",\"path\":\"selfruleloop\",\"rule\":\"var d = [];\\n\\nfunction formatDate(_date, fmt) {\\n    let date = !isNaN(_date) ? new Date(_date * 1000) : new Date(_date);\\n    return $.dateFormat(date, fmt || \\\"yyyy-MM-dd HH:mm:ss\\\")\\n}\\n\\nfunction formatSize(size) {\\n    if (!size) {\\n        return '';\\n    }\\n    const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\\n    let i = 0;\\n    while (size >= 1024) {\\n        size /= 1024;\\n        i++;\\n    }\\n    size = i ? Number(size.toFixed(2)) : size;\\n    return `${size} ${units[i]}`;\\n}\\nif (MY_PAGE == 1) {\\n    clearMyVar('nextpage');\\n}\\nif (MY_PAGE > 1 && getMyVar('nextpage', '') == '') {\\n    log('Ê≤°Êúâ‰∏ã‰∏ÄÈ°µ');\\n} else {\\n    var tokenjson = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}))[0];\\n    var reftoken = tokenjson.refresh_token;\\n    var reaccessTk = tokenjson.token_type + ' ' + tokenjson.access_token;\\n\\n    let next = getMyVar('nextpage', '') != '' ? ',\\\"marker\\\":\\\"' + getMyVar('nextpage') + '\\\"' : '';\\n    var OpenToken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-OpenToken.json', {}));\\n    /*\\n        var rescod = fetch('https://api.aliyundrive.com/adrive/v3/file/list', {\\n            headers: {\\n                'Content-Type': 'application/json',\\n                'authorization': getMyVar(\\\"aliaccessTk\\\", \\\"\\\")\\n            },\\n            body: '{\\\"drive_id\\\":\\\"' + drivid + '\\\",\\\"parent_file_id\\\":\\\"' + getResCode().split('???')[0] + '\\\",\\\"limit\\\":100,\\\"all\\\":true,\\\"url_expire_sec\\\":86400,\\\"image_thumbnail_process\\\":\\\"image/resize,w_160/format,jpeg\\\",\\\"image_url_process\\\":\\\"image\\\\/resize,w_1920/format,jpeg\\\",\\\"video_thumbnail_process\\\":\\\"video/snapshot,t_1000,f_jpg,ar_auto,w_300\\\",\\\"order_by\\\":\\\"name\\\",\\\"order_direction\\\":\\\"ASC\\\"' + next + '}',\\n            method: 'POST'\\n        });\\n     */\\n    let bodyy = '{\\\"drive_id\\\":\\\"' + drivid + '\\\",\\\"parent_file_id\\\":\\\"' + getResCode().split('???')[0] + '\\\",\\\"limit\\\":100,\\\"all\\\":true,\\\"url_expire_sec\\\":86400,\\\"image_thumbnail_process\\\":\\\"image/resize,w_160/format,jpeg\\\",\\\"image_url_process\\\":\\\"image\\\\/resize,w_1920/format,jpeg\\\",\\\"video_thumbnail_process\\\":\\\"video/snapshot,t_1000,f_jpg,ar_auto,w_300\\\",\\\"order_by\\\":\\\"name\\\",\\\"order_direction\\\":\\\"ASC\\\"' + next + '}';\\n\\n    var rescod = $.require(\\\"hiker://page/getlist\\\").getlists(bodyy,reaccessTk);\\n\\n    if (rescod.includes(\\\"ParamFlowException\\\")) {\\n        refreshPage();\\n    }\\n    //log(rescod);\\n    if (JSON.parse(rescod).next_marker) {\\n        let marker = JSON.parse(rescod).next_marker;\\n        if (marker.length > 10) {\\n            putMyVar('nextpage', marker);\\n        } else {\\n            clearMyVar('nextpage');\\n        }\\n    }\\n    var conts = JSON.parse(rescod).items;\\n    //log(conts);\\n    var tuisong = [];\\n    var zimu = [];\\n    for (let i in conts) {\\n        //var listyp = conts[i].type;\\n        if (conts[i].type != 'folder') {\\n            let fname = conts[i].name;\\n            let ftype = fname.toLowerCase();\\n            let cate = conts[i].category;\\n            if (ftype.endsWith('.srt') || ftype.endsWith('.vtt') || ftype.endsWith('.ass')) {\\n                zimu.push({\\n                    tit: fname.substring(0, fname.lastIndexOf(\\\".\\\")),\\n                    ext: conts[i].file_extension,\\n                    fid: conts[i].file_id\\n                });\\n            };\\n            if (cate == 'video' || cate == 'audio') {\\n                tuisong.push(\\n                    fname.replace(/\\\\#/g, '_').replace(/\\\\$/g, '_') + '$' + cate + '|' + conts[i].file_id\\n                );\\n            };\\n        }\\n    }\\n    var dongtai = JSON.parse(fetch('hiker://page/selflazyurl', {})).rule.toString();\\n    for (var i in conts) {\\n\\n        var listyp = conts[i].type;\\n        if (listyp != 'folder') {\\n            var cate = conts[i].category;\\n            var fname = conts[i].name;\\n            if (cate == 'video') {\\n                var title = 'üì∫' + conts[i].name;\\n            } else if (cate == 'doc') {\\n                var title = 'üìñ' + conts[i].name;\\n            } else if (cate == 'image') {\\n                var title = 'üñº' + conts[i].name;\\n            } else if (cate == 'zip') {\\n                var title = 'üì¶' + conts[i].name;\\n            } else {\\n                var title = conts[i].name\\n            }\\n            d.push({\\n                title: title,\\n                url: $(conts[i].download_url ? conts[i].download_url : conts[i].file_id).lazyRule((xdrivid, drivid, dongtai, cate, fname, zimu) => {\\n                    eval(dongtai);\\n                    return play\\n                }, xdrivid, drivid, dongtai, cate, fname, zimu),\\n                desc: formatDate(conts[i].updated_at) + '  ' + formatSize(conts[i].size),\\n                extra: {\\n                    longClick: [{\\n                        title: 'Êé®ÈÄÅÂà∞TVBox',\\n                        js: $.toString((drivid, fileid, cate, fname, reftoken) => {\\n                            return 'hiker://page/push?rule=XYQÊé®ÈÄÅ&pushurl=' + encodeURIComponent(JSON.stringify({\\n                                \\\"name\\\": fname,\\n                                \\\"refresh_token\\\": reftoken,\\n                                \\\"url\\\": fname.replace(/\\\\#/g, '_').replace(/\\\\$/g, '_') + '$' + cate + '|' + fileid,\\n                                \\\"default_drive_id\\\": drivid\\n                            }));\\n                        }, drivid, conts[i].file_id, cate, fname, reftoken)\\n                    }, {\\n                        title: 'Âà†Èô§ÂΩìÂâçÊñá‰ª∂',\\n                        js: $.toString((drivid, fileid, reaccessTk) => {\\n                            return \\\"confirm://Á°ÆËÆ§Âà†Èô§Ê≠§Êñá‰ª∂ÔºüÊó†Ê≥ïÊÅ¢Â§çÁöÑÂìü„ÄÇ.js:\\\" + $.toString((drivid, fileid, reaccessTk) => {\\n                                let rep = JSON.parse(fetch('https://api.aliyundrive.com/adrive/v2/batch', {\\n                                    headers: {\\n                                        'User-Agent': PC_UA,\\n                                        'Referer': 'https://www.aliyundrive.com/',\\n                                        'authorization': reaccessTk,\\n                                        'x-canary': 'client=web,app=share,version=v2.3.1'\\n                                        //'x-share-token': sharetoken\\n\\n                                    },\\n                                    body: {\\n                                        \\\"requests\\\": [{\\n                                            \\\"body\\\": {\\n                                                \\\"drive_id\\\": drivid,\\n                                                \\\"file_id\\\": fileid\\n                                            },\\n                                            \\\"headers\\\": {\\n                                                \\\"Content-Type\\\": \\\"application/json\\\"\\n                                            },\\n                                            \\\"id\\\": fileid,\\n                                            \\\"method\\\": \\\"POST\\\",\\n                                            \\\"url\\\": \\\"/file/delete\\\"\\n                                        }],\\n                                        \\\"resource\\\": \\\"file\\\"\\n                                    },\\n                                    method: 'POST'\\n                                }));\\n                                if (rep.responses[0].status == 204) {\\n                                    refreshPage();\\n                                    return 'toast://Âà†Èô§ÊàêÂäü'\\n                                }\\n                                //log(rep);\\n                                return 'hiker://empty'\\n                            }, drivid, fileid, reaccessTk);\\n                        }, drivid, conts[i].file_id, reaccessTk)\\n\\n                    }],\\n                    id: conts[i].file_id\\n                },\\n                col_type: 'text_1'\\n\\n            });\\n        } else {\\n            d.push({\\n                title: 'üìÇ' + conts[i].name,\\n                url: $('hiker://empty' + conts[i].file_id + '???fypage').rule((xdrivid, drivid, pushname) => {\\n                    eval(JSON.parse(fetch('hiker://page/selfruleloop', {})).rule);\\n                }, xdrivid, drivid, conts[i].name),\\n                col_type: 'flex_button'\\n            });\\n\\n        } //end if\\n\\n\\n    }\\n    let pushfold = \\\"https://www.aliyundrive.com/drive/folder/\\\" + getResCode().split('???')[0];\\n    eval(JSON.parse(fetch('hiker://page/pushcode', {})).rule);\\n}\\nsetHomeResult({\\n    data: d\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"Ëá™Â∑±Âä®ÊÄÅËß£Êûê\",\"path\":\"selflazyurl\",\"rule\":\"var defdriveid = getMyVar('defdriveid', drivid),\\n    reaccessTk = getMyVar(\\\"aliaccessTk\\\", ''),\\n    timeToken = getMyVar('timeToken', '0'),\\n    resdriveid = getMyVar('resdriveid', ''),\\n    ftype = fname.toLowerCase();\\n//deviceId = getMyVar('deviceId', \\\"\\\"),\\n//userId = getMyVar('userId', \\\"\\\");\\n\\nfunction accessTok() {\\n    if (reaccessTk == '' || (parseInt(timeToken) - parseInt(new Date().getTime() / 1000)).toString() <= 3600) {\\n        let ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\\n        var reftoken = ntoken[0].refresh_token;\\n        let refresh = fetch('https://auth.aliyundrive.com/v2/account/token', {\\n            headers: {\\n                'Content-Type': 'application/json; charset=utf-8',\\n                'User-Agent': PC_UA,\\n                'Referer': 'https://www.aliyundrive.com/'\\n            },\\n            body: '{\\\"refresh_token\\\":\\\"' + reftoken + '\\\",\\\"grant_type\\\":\\\"refresh_token\\\"}',\\n            method: 'POST'\\n        });\\n        ntoken[0] = JSON.parse(refresh);\\n        if (!fileExist(\\\"hiker://files/rules/icy/icy-ali-token.json\\\") || refresh.length > 300) {\\n            writeFile(\\\"hiker://files/rules/icy/icy-ali-token.json\\\", JSON.stringify(ntoken));\\n        }\\n        //var deviceId = JSON.parse(refresh).device_id;\\n        //putMyVar('deviceId', deviceId);\\n        putMyVar('timeToken', (parseInt(JSON.parse(refresh).expires_in) + parseInt(new Date().getTime() / 1000)).toString());\\n        defdriveid = JSON.parse(refresh).default_drive_id;\\n        //putMyVar('defdriveid', defdriveid);\\n        var userId = JSON.parse(refresh).user_id;\\n        //putMyVar('userId', userId);\\n        reaccessTk = JSON.parse(refresh).token_type + ' ' + JSON.parse(refresh).access_token;\\n        putMyVar(\\\"aliaccessTk\\\", reaccessTk);\\n        let userresinfo = JSON.parse(fetch(\\\"https://user.aliyundrive.com/v2/user/get\\\", {\\n            headers: {\\n                'content-type': 'application/json',\\n                'User-Agent': PC_UA,\\n                \\\"authorization\\\": accessTk,\\n                'Referer': 'https://www.aliyundrive.com/'\\n            },\\n            body: {},\\n            method: 'POST'\\n        }));\\n        if (userresinfo.resource_drive_id) {\\n            resdriveid = userresinfo.resource_drive_id;\\n            putMyVar('resdriveid', resdriveid);\\n        }\\n    }\\n}\\naccessTok();\\nconst transcoding = {\\n    UHD: \\\"4K Ë∂ÖÊ∏Ö\\\",\\n    QHD: \\\"2K Ë∂ÖÊ∏Ö\\\",\\n    FHD: \\\"1080 ÂÖ®È´òÊ∏Ö\\\",\\n    HD: \\\"720 È´òÊ∏Ö\\\",\\n    SD: \\\"540 Ê†áÊ∏Ö\\\",\\n    LD: \\\"360 ÊµÅÁïÖ\\\"\\n};\\nif (!fileExist(\\\"hiker://files/rules/icy/icy-ali-OpenToken.json\\\")) {\\n    var OpenToken = {\\n        'RefreshTokenOpen': '',\\n        'AccessTokenOpen': ''\\n    };\\n    oauthRequest();\\n} else {\\n    var OpenToken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-OpenToken.json', {}));\\n}\\n\\nfunction getsub(zmfid, zmext) {\\n    try {\\n        let zimul = open(zmfid, defdriveid);\\n        downloadFile(zimul, 'hiker://files/download/subtitling.' + zmext, {\\n            'Referer': 'https://www.aliyundrive.com/'\\n        });\\n        return getPath('hiker://files/download/subtitling.' + zmext)\\n    } catch (e) {\\n        return \\\"\\\";\\n    }\\n}\\n//Â§ÑÁêÜËßÜÈ¢ë  \\nvar dfid = input;\\n\\nfunction oauthRequest() {\\n    try {\\n        let json = fetch('https://open.aliyundrive.com/oauth/users/authorize?client_id=' + '76917ccccd4441c39457a04f6084fb2f' + '&redirect_uri=https://alist.nn.ci/tool/aliyundrive/callback&scope=user:base,file:all:read,file:all:write&state=', {\\n            headers: {\\n                'User-Agent': PC_UA,\\n                'Referer': 'https://www.aliyundrive.com/',\\n                'authorization': reaccessTk, //getAccessToken\\n                'x-canary': 'client=web,app=adrive,version=v4.1.1'\\n\\n            },\\n            body: {\\n                \\\"authorize\\\": 1,\\n                \\\"scope\\\": \\\"user:base,file:all:read,file:all:write\\\"\\n            },\\n            method: 'POST'\\n        });\\n        //log('oauthreq\\\\n' + json);\\n        if (json.includes('AccessTokenExpired')) {\\n            reaccessTk = '';\\n            accessTok();\\n        }\\n        let code = JSON.parse(json).redirectUri.split(\\\"code=\\\")[1];\\n        oauthRedirect(code);\\n    } catch (e) {\\n        reaccessTk = '';\\n        accessTok();\\n    }\\n};\\n\\nfunction oauthRedirect(code) {\\n    try {\\n        if (getMyVar('ored', '1') != '0') {\\n            let json = fetch('https://api.xhofe.top/alist/ali_open/code', {\\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/'\\n\\n                },\\n                body: {\\n                    \\\"code\\\": code,\\n                    \\\"grant_type\\\": \\\"authorization_code\\\"\\n                },\\n                method: 'POST'\\n            });\\n            if (json == \\\"\\\" || !JSON.parse(json)) {\\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                    headers: {\\n                        'User-Agent': PC_UA,\\n                        'Referer': 'https://www.aliyundrive.com/'\\n\\n                    },\\n                    body: {\\n                        \\\"code\\\": code,\\n                        \\\"grant_type\\\": \\\"authorization_code\\\"\\n                    },\\n                    method: 'POST'\\n                });\\n            }\\n            //log(json);\\n            log('Ëé∑ÂèñRefreshTokenOpen');\\n            if (json.includes('Too Many Requests')) {\\n                putMyVar('ored', '0');\\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                return '';\\n            } else {\\n                putMyVar('ored', '1');\\n                if (JSON.parse(json).refresh_token) {\\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\\n                    OpenToken.RefreshTokenOpen = getRefreshTokenOpen;\\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\\n                    OpenToken.AccessTokenOpen = getAccessTokenOpen;\\n                    writeFile(\\\"hiker://files/rules/icy/icy-ali-OpenToken.json\\\", JSON.stringify(OpenToken));\\n                    putMyVar('redirect', '1');\\n                }\\n            }\\n        }\\n    } catch (e) {}\\n};\\n\\nfunction refreshOpenToken() {\\n    try {\\n        if (getMyVar('rot', '1') != '0') {\\n            let json = fetch('https://api.xhofe.top/alist/ali_open/token', {\\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/'\\n                },\\n                body: {\\n                    'grant_type': 'refresh_token',\\n                    'refresh_token': OpenToken.RefreshTokenOpen\\n                },\\n                method: 'POST'\\n            });\\n            if (json == \\\"\\\" || !JSON.parse(json)) {\\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                    headers: {\\n                        'User-Agent': PC_UA,\\n                        'Referer': 'https://www.aliyundrive.com/'\\n                    },\\n                    body: {\\n                        'grant_type': 'refresh_token',\\n                        'refresh_token': OpenToken.RefreshTokenOpen\\n                    },\\n                    method: 'POST'\\n                });\\n            }\\n            log('Ëé∑ÂèñAccessTokenOpen');\\n            if (json.includes('Too Many Requests')) {\\n                putMyVar('rot', '0');\\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                return '';\\n            } else {\\n                putMyVar('rot', '1');\\n                if (JSON.parse(json).refresh_token) {\\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\\n                    OpenToken.RefreshTokenOpen = getRefreshTokenOpen;\\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\\n                    OpenToken.AccessTokenOpen = getAccessTokenOpen;\\n                    writeFile(\\\"hiker://files/rules/icy/icy-ali-OpenToken.json\\\", JSON.stringify(OpenToken));\\n                }\\n            }\\n        }\\n    } catch (e) {}\\n};\\n\\nfunction open(fileId, defdriveid) {\\n    try {\\n        let json = \\\"\\\";\\n        let number = 0;\\n        do {\\n            json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getDownloadUrl', {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/',\\n                    'authorization': OpenToken.AccessTokenOpen\\n                    //getAccessTokenOpen\\n\\n                },\\n                body: {\\n                    'file_id': fileId,\\n                    'drive_id': defdriveid\\n                },\\n                method: 'POST'\\n            });\\n            //log('open\\\\n' + json);\\n            if (json.includes('\\\"url\\\":\\\"http')) {\\n                break;\\n            }\\n            if (json.includes(\\\"TooManyRequests\\\")) {\\n                //deletee(fileId);\\n                toast('Too Many Requests');\\n                log('TooManyRequests');\\n                //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\\n            }\\n            if (getMyVar('redirect', '0') == '0') {\\n                accessTok();\\n                oauthRequest();\\n            } else {\\n                refreshOpenToken();\\n            }\\n\\n            number++\\n        } while (number < 2);\\n        return JSON.parse(json).url;\\n    } catch (e) {\\n        return 'hiker://empty'\\n    }\\n};\\n\\n/*\\nfunction getQuality(taskList) {\\n    let orders = [\\\"UHD\\\", \\\"QHD\\\", \\\"FHD\\\", \\\"HD\\\", \\\"SD\\\", \\\"LD\\\"];\\n    for (let or of orders) {\\n        for (let i = 0; i < taskList.length; i++) {\\n            let task = taskList[i];\\n            if (task.template_id == or) {\\n                return task.url;\\n            }\\n        }\\n    }\\n    return taskList[0].url;\\n};\\n\\nfunction openPre(fileId, defdriveid) {\\n    try {\\n        let json = \\\"\\\";\\n        let number = 0;\\n        do {\\n            json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getVideoPreviewPlayInfo', {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/',\\n                    'authorization': OpenToken.AccessTokenOpen\\n                    //getAccessTokenOpen\\n\\n                },\\n                body: {\\n                    'file_id': fileId,\\n                    'drive_id': defdriveid,\\n                    'category': 'live_transcoding',\\n                    'url_expire_sec': '14400'\\n                },\\n                method: 'POST'\\n            });\\n            //log('openpre\\\\n' + json);\\n            if (json.includes('\\\"url\\\":\\\"http')) {\\n                break;\\n            }\\n            if (json.includes(\\\"TooManyRequests\\\")) {\\n                //deletee(fileId);\\n                toast('Too Many Requests');\\n                log('TooManyRequests');\\n                //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\\n            }\\n            if (getMyVar('redirect', '0') == '0') {\\n                oauthRequest();\\n            }\\n            number++\\n        } while (number < 2);\\n\\n        let taskList = JSON.parse(json).video_preview_play_info.live_transcoding_task_list;\\n        //log(taskList);\\n        return getQuality(taskList);\\n    } catch (e) {\\n        return 'hiker://empty'\\n    }\\n};\\ndefdriveid = getItem('alideviceid', '1') == '1' ? defdriveid:resdriveid;\\nif (cate == 'video' || cate == 'audio') {\\n    if (cate == 'audio') {\\n        var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\\n    } else {\\n\\n        if (getItem('quality', '1') == '1') {\\n            var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\\n        } else {\\n            var play = openPre(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\\n        }\\n        if (zimu.length > 0) {\\n            for (let i in zimu) {\\n                var zimut = zimu[i].tit;\\n                if (fname.includes(zimut) || zimut.includes(fname.substring(0, fname.lastIndexOf('.')))) {\\n                    play = JSON.stringify({\\n                        urls: [play.split(';{')[0]],\\n                        headers: [{\\n                            'Referer': 'https://www.aliyundrive.com/'\\n                        }],\\n                        subtitle: getsub(zimu[i].fid, zimu[i].ext)\\n                    })\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n\\n} else if (cate == 'image') {\\n    var loclink = open(dfid, defdriveid);\\n    //log(loclink);\\n    var play = 'pics://' + loclink + '@Referer=https://www.aliyundrive.com/';\\n} else if (ftype.endsWith('.srt') || ftype.endsWith('.vtt') || ftype.endsWith('.ass')) {\\n\\n    var zimul = open(dfid, defdriveid);\\n    downloadFile(zimul, 'hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\\\".\\\")), {\\n        'Referer': 'https://www.aliyundrive.com/'\\n    });\\n    var play = 'toast://Â≠óÂπïÊñá‰ª∂Â∑≤‰∏ãËΩΩÂà∞hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\\\".\\\"))\\n    // + ';{Referer@https://www.aliyundrive.com/}';\\n} else {\\n    var play = 'toast://ËØ•Ê†ºÂºèÊöÇÊú™ÊîØÊåÅÔºåÁõÆÂâçÂè™ÊîØÊåÅÊü•ÁúãËßÜÈ¢ëÂíåÂõæÁâá„ÄÇ'\\n}\\n*/\\nfunction aliSharePlayUrl(fileId, defdriveid, OpenToken) {\\n    try {\\n        let json = \\\"\\\";\\n        let number = 0;\\n        let aliyunUrl = [];\\n        do {\\n            json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getVideoPreviewPlayInfo', {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/',\\n                    'authorization': OpenToken.AccessTokenOpen\\n                    //getAccessTokenOpen\\n\\n                },\\n                body: {\\n                    'file_id': fileId,\\n                    'drive_id': defdriveid,\\n                    'category': 'live_transcoding',\\n                    'url_expire_sec': '14400'\\n                },\\n                method: 'POST'\\n            });\\n            //log('openpre\\\\n' + json);\\n            if (json.includes('\\\"url\\\":\\\"http')) {\\n                break;\\n            }\\n            if (json.includes(\\\"TooManyRequests\\\")) {\\n                //deletee(fileId);\\n                toast('Too Many Requests');\\n                log('TooManyRequests');\\n                //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\\n            }\\n            if (getMyVar('redirect', '0') == '0') {\\n                oauthRequest();\\n            }\\n            number++\\n        } while (number < 2);\\n\\n        aliyunUrl = JSON.parse(json).video_preview_play_info.live_transcoding_task_list;\\n        aliyunUrl.reverse();\\n\\n        return aliyunUrl;\\n    } catch (e) {\\n        log('aliSharePlayUrlÊä•Èîô>' + e.message);\\n        return \\\"\\\";\\n    }\\n}\\n\\nfunction getAliUrl(file_id, defdriveid, OpenToken, playUrlList) {\\n    try {\\n        let urls = [];\\n        let names = [];\\n        let heads = [];\\n        let u = startProxyServer($.toString((file_id, defdriveid, OpenToken) => {\\n\\n            function refreshOpenToken() {\\n                try {\\n                    if (getMyVar('rot', '1') != '0') {\\n                        let json = fetch('https://api.xhofe.top/alist/ali_open/token', {\\n                            //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                            headers: {\\n                                'User-Agent': PC_UA,\\n                                'Referer': 'https://www.aliyundrive.com/'\\n                            },\\n                            body: {\\n                                'grant_type': 'refresh_token',\\n                                'refresh_token': OpenToken.RefreshTokenOpen\\n                            },\\n                            method: 'POST'\\n                        });\\n                        if (json == \\\"\\\" || !JSON.parse(json)) {\\n                            json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                                headers: {\\n                                    'User-Agent': PC_UA,\\n                                    'Referer': 'https://www.aliyundrive.com/'\\n                                },\\n                                body: {\\n                                    'grant_type': 'refresh_token',\\n                                    'refresh_token': OpenToken.RefreshTokenOpen\\n                                },\\n                                method: 'POST'\\n                            });\\n                        }\\n                        log('Ëé∑ÂèñAccessTokenOpen');\\n                        if (json.includes('Too Many Requests')) {\\n                            putMyVar('rot', '0');\\n                            toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                            log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                            return '';\\n                        } else {\\n                            putMyVar('rot', '1');\\n                            if (JSON.parse(json).refresh_token) {\\n                                let getRefreshTokenOpen = JSON.parse(json).refresh_token;\\n                                OpenToken.RefreshTokenOpen = getRefreshTokenOpen;\\n                                let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\\n                                OpenToken.AccessTokenOpen = getAccessTokenOpen;\\n                                writeFile(\\\"hiker://files/rules/icy/icy-ali-OpenToken.json\\\", JSON.stringify(OpenToken));\\n                            }\\n                        }\\n                    }\\n                } catch (e) {}\\n            };\\n\\n\\n            function aliSharePlayUrl(fileId, defdriveid, OpenToken) {\\n                try {\\n                    let json = \\\"\\\";\\n                    let number = 0;\\n                    if (getMyVar('rot', '1') != '0') {\\n                        refreshOpenToken();\\n                    }\\n                    let aliyunUrl = [];\\n                    do {\\n                        json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/getVideoPreviewPlayInfo', {\\n                            headers: {\\n                                'User-Agent': PC_UA,\\n                                'Referer': 'https://www.aliyundrive.com/',\\n                                'authorization': OpenToken.AccessTokenOpen\\n                                //getAccessTokenOpen\\n\\n                            },\\n                            body: {\\n                                'file_id': fileId,\\n                                'drive_id': defdriveid,\\n                                'category': 'live_transcoding',\\n                                'url_expire_sec': '14400'\\n                            },\\n                            method: 'POST'\\n                        });\\n                        //log('openpre\\\\n' + json);\\n                        if (json.includes('\\\"url\\\":\\\"http')) {\\n                            break;\\n                        }\\n                        if (json.includes(\\\"TooManyRequests\\\")) {\\n                            //deletee(fileId);\\n                            toast('Too Many Requests');\\n                            log('TooManyRequests');\\n                            //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\\n                        }\\n\\n                        number++\\n                    } while (number < 2);\\n\\n                    aliyunUrl = JSON.parse(json).video_preview_play_info.live_transcoding_task_list;\\n                    aliyunUrl.reverse();\\n\\n                    return aliyunUrl;\\n                } catch (e) {\\n                    log('aliSharePlayUrlÊä•Èîô>' + e.message);\\n                    return \\\"\\\";\\n                }\\n            }\\n\\n            function geturl(fileid, line) {\\n                //È¢ÑÂä†ËΩΩÊó∂‰ºöÂèòfile_id,ÊâÄ‰ª•tsËøáÊúüÊõ¥Êñ∞Êó∂ËøòÂèñÂéüÊù•ÁöÑid\\n                let playUrlList = aliSharePlayUrl(fileid, defdriveid, OpenToken) || [];\\n                let aliurl;\\n                playUrlList.forEach((item) => {\\n                    if (item.template_id == line) {\\n                        aliurl = item.url;\\n                    }\\n                })\\n                //‰∏äÈù¢ÊòØËé∑ÂèñÈòøÈáåÁöÑÊí≠ÊîæÂú∞ÂùÄ\\n                //log(\\\"ÊàëÂú®‰ª£ÁêÜ\\\" + aliurl);\\n                let home = aliurl.split('media.m3u8')[0];\\n                let f = fetch(aliurl, {\\n                    headers: {\\n                        'User-Agent': PC_UA,\\n                        'Referer': 'https://www.aliyundrive.com/'\\n                    },\\n                    timeout: 3000\\n                }).split(\\\"\\\\n\\\");\\n                let ff = f.map(it => {\\n                    if (it.startsWith(\\\"media-\\\")) {\\n                        return \\\"/proxy?url=\\\" + base64Encode(home + it);\\n                    }\\n                    return it;\\n                }).join(\\\"\\\\n\\\");\\n                //log('ufid-'+fileid);\\n                writeFile('hiker://files/cache/_fileSelect_' + fileid + '.m3u8', ff);\\n                return ff;\\n            }\\n\\n            let url = base64Decode(MY_PARAMS.url);\\n            if (url.includes(\\\".ts\\\")) {\\n                let fid = url.split('&f=')[1].split('&')[0];\\n                //log('sfid-'+fid);\\n                let f = fetch('hiker://files/cache/_fileSelect_' + fid + '.m3u8').split(\\\"\\\\n\\\");\\n                f.forEach(it => {\\n                    if (it && it.startsWith('/proxy?url=')) {\\n                        let furl = base64Decode(it.replace('/proxy?url=', ''));\\n                        if (url.substr(url.indexOf('/media-'), url.indexOf('.ts')) == furl.substr(furl.indexOf('/media-'), furl.indexOf('.ts'))) {\\n                            url = furl;\\n                        }\\n                    }\\n                })\\n                let expires = url.split('x-oss-expires=')[1].split('&')[0];\\n                const lasttime = parseInt(expires) - Date.now() / 1000;\\n                if (lasttime < 60) {\\n                    //log('ËøáÊúüÊõ¥Êñ∞')\\n                    let line = url.split('/media')[0]; //Âèñ‰πãÂâçÊí≠ÊîæÁöÑtsÊÆµÁ∫øË∑Ø\\n                    line = line.substring(line.lastIndexOf('/') + 1);\\n                    let f = geturl(fid, line).split(\\\"\\\\n\\\");\\n                    f.forEach(it => {\\n                        if (it && it.startsWith('/proxy?url=')) {\\n                            let furl = base64Decode(it.replace('/proxy?url=', ''));\\n                            if (url.substr(url.indexOf('/media-'), url.indexOf('.ts')) == furl.substr(furl.indexOf('/media-'), furl.indexOf('.ts'))) {\\n                                url = furl;\\n                            }\\n                        }\\n                    })\\n\\n                } else {\\n                    //log('Êú™ËøáÊúü')\\n                    //log(\\\"‰ª£ÁêÜtsÔºö\\\" + url);\\n                }\\n                return JSON.stringify({\\n                    statusCode: 302,\\n                    headers: {\\n                        \\\"Location\\\": url,\\n                        \\\"User-Agent\\\": PC_UA,\\n                        'Referer': 'https://www.aliyundrive.com/'\\n                    }\\n                });\\n            } else {\\n                //log('È¶ñÊ¨°Êõ¥Êñ∞')\\n                let line = url.split('|')[1];\\n                let ff = geturl(file_id, line);\\n                return ff;\\n            }\\n        }, file_id, defdriveid, OpenToken));\\n\\n        //let playUrlList = aliSharePlayUrl(file_id, defdriveid,OpenToken,oauthRequest,oauthRedirect,reaccessTk) || [];\\n\\n        if (playUrlList.length > 0) {\\n            playUrlList.forEach((item) => {\\n                urls.push(u + \\\"?url=\\\" + base64Encode(item.url + \\\"|\\\" + item.template_id) + \\\"#.m3u8\\\");\\n                names.push(transcoding[item.template_id] ? transcoding[item.template_id] : item.template_height);\\n                heads.push({\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/'\\n                });\\n            })\\n            var mult = {\\n                urls: urls,\\n                names: names,\\n                headers: heads\\n            };\\n            if (zimu.length > 0) {\\n                for (let i in zimu) {\\n                    var zimut = zimu[i].tit;\\n                    if (fname.includes(zimut) || zimut.includes(fname.substring(0, fname.lastIndexOf('.')))) {\\n                        mult['subtitle'] = getsub(zimu[i].fid, zimu[i].ext);\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            return mult;\\n        } else {\\n            log('Êú™Ëé∑ÂèñÈòøÈáåÊí≠ÊîæÂú∞ÂùÄÔºåÂª∫ËÆÆÈáçËøõËΩØ‰ª∂ÂÜçËØï‰∏ÄÊ¨°')\\n            return {};\\n        }\\n    } catch (e) {\\n        log('getAliUrlÊä•Èîô>' + e.message);\\n        return {};\\n    }\\n}\\n\\ndefdriveid = getItem('alideviceid', '1') == '1' ? defdriveid : resdriveid;\\n\\nif (cate == 'video' || cate == 'audio') {\\n    if (cate == 'audio') {\\n        var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\\n    } else {\\n\\n        if (getItem('quality', '1') == '1') {\\n            var play = open(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\\n            if (zimu.length > 0) {\\n                for (let i in zimu) {\\n                    var zimut = zimu[i].tit;\\n                    if (fname.includes(zimut) || zimut.includes(fname.substring(0, fname.lastIndexOf('.')))) {\\n                        play = JSON.stringify({\\n                            urls: [play.split(';{')[0]],\\n                            headers: [{\\n                                'Referer': 'https://www.aliyundrive.com/'\\n                            }],\\n                            subtitle: getsub(zimu[i].fid, zimu[i].ext)\\n                        })\\n                        break;\\n                    }\\n                }\\n            }\\n        } else {\\n            //var play = openPre(dfid, defdriveid) + ';{Referer@https://www.aliyundrive.com/}';\\n            let playUrlList = aliSharePlayUrl(dfid, defdriveid, OpenToken) || [];\\n\\n\\n            var play = JSON.stringify(getAliUrl(\\n                dfid,\\n                defdriveid,\\n                OpenToken,\\n                playUrlList\\n            ));\\n        }\\n\\n    }\\n\\n} else if (cate == 'image') {\\n    var loclink = open(dfid, defdriveid);\\n    //log(loclink);\\n    var play = 'pics://' + loclink + '@Referer=https://www.aliyundrive.com/';\\n} else if (ftype.endsWith('.srt') || ftype.endsWith('.vtt') || ftype.endsWith('.ass')) {\\n\\n    var zimul = open(dfid, defdriveid);\\n    downloadFile(zimul, 'hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\\\".\\\")), {\\n        'Referer': 'https://www.aliyundrive.com/'\\n    });\\n    var play = 'toast://Â≠óÂπïÊñá‰ª∂Â∑≤‰∏ãËΩΩÂà∞hiker://files/download/XYQ_subtitling' + fname.substring(fname.lastIndexOf(\\\".\\\"))\\n    // + ';{Referer@https://www.aliyundrive.com/}';\\n} else {\\n    var play = 'toast://ËØ•Ê†ºÂºèÊöÇÊú™ÊîØÊåÅÔºåÁõÆÂâçÂè™ÊîØÊåÅÊü•ÁúãËßÜÈ¢ëÂíåÂõæÁâá„ÄÇ'\\n}\"},{\"col_type\":\"movie_3\",\"name\":\"Êé®ÈÄÅ‰ª£Á†Å\",\"path\":\"pushcode\",\"rule\":\"js:\\n//Êé®ÈÄÅ‰ª£Á†Å\\nlet push = JSON.stringify({\\n    \\\"name\\\": pushname,\\n    \\\"url\\\": tuisong.join('#'),\\n    \\\"default_drive_id\\\": drivid,\\n    \\\"refresh_token\\\": tokenjson.refresh_token\\n}).replace(/\\\\&/g, 'ÔºÜÔºÜ');\\nlet fold = JSON.stringify({\\n    \\\"name\\\": pushname,\\n    \\\"url\\\": pushfold,\\n    \\\"default_drive_id\\\": drivid,\\n    \\\"refresh_token\\\": tokenjson.refresh_token\\n}).replace(/\\\\&/g, 'ÔºÜÔºÜ');\\n//log(push);\\n//log(tuisong.length);\\nif (tuisong.length > 0) {\\n    d.unshift({\\n        title: \\\"Êé®ÈÄÅÂΩìÂâçÁõÆÂΩïÂà∞TVBox\\\",\\n        url: $(fold).lazyRule(() => {\\n            return 'hiker://page/push?rule=XYQÊé®ÈÄÅ&pushurl=' + encodeURIComponent(input);\\n        }),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    d.unshift({\\n        title: \\\"Êé®ÈÄÅÂΩìÂâçÈ°µÈü≥ËßÜÈ¢ëÂà∞TVBox\\\",\\n        url: $(push).lazyRule(() => {\\n            return 'hiker://page/push?rule=XYQÊé®ÈÄÅ&pushurl=' + encodeURIComponent(input);\\n        }),\\n        col_type: \\\"scroll_button\\\"\\n    });\\n    d.unshift({\\n        title: (getItem('quality', '1') == '1' ? 'ÂéüÁîªÊí≠‚àö' : 'ËΩ¨Á†ÅÊí≠‚àö'),\\n        url: `hiker://empty@lazyRule=.js:getItem('quality','1')=='1'?setItem('quality','0'):setItem('quality','1');refreshPage();'toast://ÂàáÊç¢ÊàêÂäüÔºÅ'`,\\n        col_type: 'scroll_button'\\n    });\\n}\\n//\"},{\"col_type\":\"movie_3\",\"name\":\"ÁôªÂÖ•Ë¥¶Âè∑\",\"path\":\"Login\",\"rule\":\"d.push({\\n    title: \\\"‚õÖÔ∏èÁÇπÊàëÁΩëÈ°µÁôªÂΩï\\\",\\n    url: $(\\\"hiker://empty###noRecordHistory##noHistory#\\\").rule(() => {\\n        let d = [];\\n        let ntoken = [];\\n        if (fileExist(\\\"hiker://files/rules/icy/icy-ali-token.json\\\")) {\\n            ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\\n        }\\n        let url = 'https://www.aliyundrive.com/sign'\\n        let js = $.toString((ntoken) => {\\n            const tokenFunction = function() {\\n                var stor = \\\"\\\";\\n                if (localStorage.getItem('token') != null) {\\n                    stor = localStorage.getItem(\\\"token\\\");\\n                } else {\\n                    stor = sessionStorage.getItem(\\\"token\\\");\\n                }\\n                var token = JSON.parse(stor);\\n                if (token && token.user_id) {\\n                    let alistfile = \\\"hiker://files/rules/icy/icy-ali-token.json\\\";\\n                    ntoken[0] = token;\\n                    fy_bridge_app.writeFile(alistfile, JSON.stringify(ntoken));\\n                    localStorage.clear();\\n                    alert('TOKENËé∑ÂèñÊàêÂäüÔºåËøîÂõûÂêéÂà∑Êñ∞È°µÈù¢ÔºÅ');\\n                    fy_bridge_app.parseLazyRule(`hiker://empty@lazyRule=.js:refreshX5WebView('');`);\\n                    fy_bridge_app.back();\\n                    return;\\n                } else {\\n                    token_timer();\\n                }\\n            }\\n            var token_timer = function() {\\n                setTimeout(tokenFunction, 500)\\n            };\\n            tokenFunction();\\n        }, ntoken)\\n        d.push({\\n            url: url,\\n            col_type: 'x5_webview_single',\\n            desc: '100%&&float',\\n            extra: {\\n                canBack: true,\\n                ua: PC_UA,\\n                js: js\\n            }\\n        })\\n        setResult(d);\\n    }),\\n    col_type: 'text_2'\\n});\\nd.push({\\n    title: \\\"‚õÖÔ∏èÁÇπÊàëTokenÁôªÂΩï\\\",\\n    url: $(\\\"\\\", \\\"ËæìÂÖ•32‰ΩçÈòøÈáåToken\\\").input(() => {\\n        let reftoken = input.trim();\\n        let ntoken = [];\\n        if (reftoken.length == 32) {\\n            var refresh = fetch('https://auth.aliyundrive.com/v2/account/token', {\\n                headers: {\\n                    'Content-Type': 'application/json',\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/'\\n                },\\n                body: '{\\\"refresh_token\\\":\\\"' + reftoken + '\\\",\\\"grant_type\\\":\\\"refresh_token\\\"}',\\n                method: 'POST'\\n            });\\n            //log(refresh);\\n            if (refresh.includes('\\\"refresh_token\\\"')) {\\n                ntoken[0] = JSON.parse(refresh);\\n                writeFile(\\\"hiker://files/rules/icy/icy-ali-token.json\\\", JSON.stringify(ntoken));\\n                refreshPage();\\n                return 'hiker://empty'\\n            }\\n        }\\n        return 'toast://ÁôªÂÖ•Â§±Ë¥•ÔºåÂèØËÉΩTokenÊòØÊó†ÊïàÁöÑ„ÄÇ'\\n    }),\\n    col_type: 'text_2'\\n});\"},{\"col_type\":\"movie_3\",\"name\":\"Ëé∑ÂèñÂàóË°®\",\"path\":\"getlist\",\"rule\":\"js:\\nvar OpenToken = {};\\n\\nfunction accessTok() {\\n    let ntoken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-token.json', {}));\\n    let reftoken = ntoken[0].refresh_token;\\n    let refresh = fetch('https://auth.aliyundrive.com/v2/account/token', {\\n        headers: {\\n            'Content-Type': 'application/json; charset=utf-8',\\n            'User-Agent': PC_UA,\\n            'Referer': 'https://www.aliyundrive.com/'\\n        },\\n        body: '{\\\"refresh_token\\\":\\\"' + reftoken + '\\\",\\\"grant_type\\\":\\\"refresh_token\\\"}',\\n        method: 'POST'\\n    });\\n    ntoken[0] = JSON.parse(refresh);\\n    if (!fileExist(\\\"hiker://files/rules/icy/icy-ali-token.json\\\") || refresh.length > 300) {\\n        writeFile(\\\"hiker://files/rules/icy/icy-ali-token.json\\\", JSON.stringify(ntoken));\\n    }\\n    reaccessTk = JSON.parse(refresh).token_type + ' ' + JSON.parse(refresh).access_token;\\n};\\n\\nfunction oauthRequest() {\\n    try {\\n        let json = fetch('https://open.aliyundrive.com/oauth/users/authorize?client_id=' + '76917ccccd4441c39457a04f6084fb2f' + '&redirect_uri=https://alist.nn.ci/tool/aliyundrive/callback&scope=user:base,file:all:read,file:all:write&state=', {\\n            headers: {\\n                'User-Agent': PC_UA,\\n                'Referer': 'https://www.aliyundrive.com/',\\n                'authorization': reaccessTk, //getAccessToken\\n                'x-canary': 'client=web,app=adrive,version=v4.1.1'\\n\\n            },\\n            body: {\\n                \\\"authorize\\\": 1,\\n                \\\"scope\\\": \\\"user:base,file:all:read,file:all:write\\\"\\n            },\\n            method: 'POST'\\n        });\\n        //log('oauthreq\\\\n' + json);\\n        if (json.includes('AccessTokenExpired')) {\\n            reaccessTk = '';\\n            accessTok();\\n        }\\n        let code = JSON.parse(json).redirectUri.split(\\\"code=\\\")[1];\\n        oauthRedirect(code);\\n    } catch (e) {\\n        reaccessTk = '';\\n        accessTok();\\n    }\\n};\\n\\nfunction oauthRedirect(code) {\\n    try {\\n        if (getMyVar('ored', '1') != '0') {\\n            let json = fetch('https://api.xhofe.top/alist/ali_open/code', {\\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/'\\n\\n                },\\n                body: {\\n                    \\\"code\\\": code,\\n                    \\\"grant_type\\\": \\\"authorization_code\\\"\\n                },\\n                method: 'POST'\\n            });\\n            if (json == \\\"\\\" || !JSON.parse(json)) {\\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                    headers: {\\n                        'User-Agent': PC_UA,\\n                        'Referer': 'https://www.aliyundrive.com/'\\n\\n                    },\\n                    body: {\\n                        \\\"code\\\": code,\\n                        \\\"grant_type\\\": \\\"authorization_code\\\"\\n                    },\\n                    method: 'POST'\\n                });\\n            }\\n            //log(json);\\n            log('Ëé∑ÂèñRefreshTokenOpen');\\n            if (json.includes('Too Many Requests')) {\\n                putMyVar('ored', '0');\\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                return '';\\n            } else {\\n                putMyVar('ored', '1');\\n                if (JSON.parse(json).refresh_token) {\\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\\n                    OpenToken = {\\n                        'RefreshTokenOpen': getRefreshTokenOpen,\\n                        'AccessTokenOpen': getAccessTokenOpen\\n                    };\\n                    writeFile(\\\"hiker://files/rules/icy/icy-ali-OpenToken.json\\\", JSON.stringify(OpenToken));\\n                    putMyVar('redirect', '1');\\n                }\\n            }\\n        }\\n    } catch (e) {}\\n};\\n\\nfunction refreshOpenToken() {\\n    try {\\n        if (getMyVar('rot', '1') != '0') {\\n            let json = fetch('https://api.xhofe.top/alist/ali_open/token', {\\n                //let json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                headers: {\\n                    'User-Agent': PC_UA,\\n                    'Referer': 'https://www.aliyundrive.com/'\\n                },\\n                body: {\\n                    'grant_type': 'refresh_token',\\n                    'refresh_token': OpenToken.RefreshTokenOpen\\n                },\\n                method: 'POST'\\n            });\\n            if (json == \\\"\\\" || !JSON.parse(json)) {\\n                json = fetch('https://api-cf.nn.ci/alist/ali_open/code', {\\n                    headers: {\\n                        'User-Agent': PC_UA,\\n                        'Referer': 'https://www.aliyundrive.com/'\\n                    },\\n                    body: {\\n                        'grant_type': 'refresh_token',\\n                        'refresh_token': OpenToken.RefreshTokenOpen\\n                    },\\n                    method: 'POST'\\n                });\\n            }\\n            log('Ëé∑ÂèñAccessTokenOpen');\\n            if (json.includes('Too Many Requests')) {\\n                putMyVar('rot', '0');\\n                toast('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                log('ËØ∑Ê±ÇÂ§™È¢ëÁπÅÔºåË¢´Â∞ÅIP‰∫Ü');\\n                return '';\\n            } else {\\n                putMyVar('rot', '1');\\n                if (JSON.parse(json).refresh_token) {\\n                    let getRefreshTokenOpen = JSON.parse(json).refresh_token;\\n                    let getAccessTokenOpen = JSON.parse(json).token_type + ' ' + JSON.parse(json).access_token;\\n                    OpenToken = {\\n                        'RefreshTokenOpen': getRefreshTokenOpen,\\n                        'AccessTokenOpen': getAccessTokenOpen\\n                    };\\n                    writeFile(\\\"hiker://files/rules/icy/icy-ali-OpenToken.json\\\", JSON.stringify(OpenToken));\\n                }\\n            }\\n        }\\n    } catch (e) {}\\n};\\n\\nfunction getopenacctoken() {\\n    if (!fileExist(\\\"hiker://files/rules/icy/icy-ali-OpenToken.json\\\")) {\\n        oauthRequest();\\n    } else {\\n        OpenToken = JSON.parse(fetch('hiker://files/rules/icy/icy-ali-OpenToken.json', {}));\\n    }\\n    return OpenToken.AccessTokenOpen;\\n}\\n\\n\\n$.exports.getlists = function(bodydata, reaccessTk) {\\n    let json = \\\"\\\";\\n    let number = 0;\\n    do {\\n        json = fetch('https://open.aliyundrive.com/adrive/v1.0/openFile/list', {\\n            headers: {\\n                'User-Agent': PC_UA,\\n                'Referer': 'https://www.aliyundrive.com/',\\n                'authorization': getopenacctoken()\\n\\n            },\\n            body: bodydata,\\n            method: 'POST'\\n        });\\n\\n        if (json.includes('\\\"next_marker\\\"')) {\\n            break;\\n        }\\n        if (json.includes(\\\"TooManyRequests\\\")) {\\n            //deletee(fileId);\\n            toast('Too Many Requests');\\n            log('TooManyRequests');\\n            //return 'toast://ËØ∑Ê±ÇÂ§™È¢ëÁπÅ';\\n        }\\n        if (getMyVar('redirect', '0') == '0') {\\n            accessTok();\\n            oauthRequest();\\n        } else {\\n            refreshOpenToken();\\n        }\\n        number++\\n    } while (number < 2);\\n\\n    return json\\n}\"}]","proxy":"","icon":"https://gw.alicdn.com/imgextra/i3/O1CN01aj9rdD1GS0E8io11t_!!6000000000620-73-tps-16-16.ico"}