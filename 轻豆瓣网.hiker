{"last_chapter_rule":"js:\neval(fetch(getVar(\"qdbw_file\")));\nlet type = getParam('type', ''),\n    id = getParam('id', ''),\n    title = getParam('title', '');\nlet res = getDoubanRes(\"https://frodo.douban.com/api/v2/\" + type + \"/\" + id);\nlet update = \"\";\nif (title == '') {\n    let length = res.vendors.length;\n    update += length > 0 ? '共' + length + '个片源' : '暂无片源';\n    if (length > 0) {\n        let e = res.vendors[0];\n        update += e.episodes_info ? \"|\" + e.episodes_info : \"\";\n    }\n} else {\n    for (let e of res.vendors) {\n        if (e.title == title) {\n            update += e.episodes_info ? e.episodes_info : \"\";\n            break;\n        }\n    }\n}\nsetResult(update);","pageList":[{"col_type":"movie_3","name":"配置编辑界面","path":"setting-editor","rule":"js:\neval(request(getVar('qdbw_file')));\nlet d = [];\nlet configType = getVar('input_config_type');\nif (configType === '解析插件配置') {\n  setPageTitle('编辑解析代码');\n  analysisModeEditPage(d);\n} else if (configType === '影片详情页面配置') {\n  setPageTitle('编辑影片详情页面代码');\n  detailViewModeEditPage(d);\n} else if (configType === '首页配置') {\n  setPageTitle('编辑首页代码');\n  homePageModeEditPage(d);\n} else {\n  setError('错误的配置');\n}\nsetResult(d);\n"},{"col_type":"movie_3","name":"解除被封ip","path":"releaseIP","rule":"js:\nlet id = getParam('id');\nlet d = [];\nd.push({\n    title: '您已被封禁IP地址或触发了人机验证，请按照以下步骤处理(如不处理您将在一段时间内无法正常获取剧集列表)',\n    url: 'hiker://empty',\n    col_type: 'text_1'\n});\nd.push({\n    title: '1.点击此处导入自动获取Cookie插件',\n    url: $()\n        .lazyRule(() => {\n            let getDoubanCookie = \"(function(){if(window['location']['host']=='www.douban.com'){fy_bridge_app['writeFile']('hiker://files/cache/doubancookie.txt',fy_bridge_app['getCookie']('https://www.douban.com/'));}if(window['location']['host']=='m.douban.com'){fy_bridge_app['writeFile']('hiker://files/cache/doubancookie.txt',fy_bridge_app['getCookie']('https://m.douban.com/'));}}());\"\n            if (!fileExist('hiker://files/cache/global_getDoubanCookie.js')) {\n                writeFile('hiker://files/cache/global_getDoubanCookie.js', getDoubanCookie);\n            };\n            return 'rule://' + base64Encode('海阔视界，网页插件￥js_url￥global_getDoubanCookie@hiker://files/cache/global_getDoubanCookie.js');\n        }),\n    col_type: 'text_1'\n});\nd.push({\n    title: '2.点击此处进入网页进行登录或人机验证，完成后返回此页面',\n    url: 'https://movie.douban.com/subject/' + id + '/',\n    col_type: 'text_1'\n});\nd.push({\n    title: '3.完成登录或人机验证后返回影片详情页面重新进入',\n    url: 'hiker://empty',\n    col_type: 'text_1'\n});\nsetResult(d)"},{"col_type":"movie_3","name":"抢救页面","path":"urgencyMode","rule":"js:\nlet d = [];\nd.push({\n  title: '很明显,出了一些小问题,建议重生',\n  col_type: 'text_center_1',\n  url: 'hiker://empty',\n});\nd.push({\n  title: '点我更新依赖',\n  col_type: 'text_1',\n  url: $('hiker://empty').lazyRule(() => {\n    let file = 'hiker://files/rules/joker/qdbw.js';\n    let gitfile = 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/qdbw.js';\n    let text = request(gitfile);\n    writeFile(file, text);\n    refreshPage();\n    return 'toast://依赖文件更新成功';\n  }),\n});\nd.push({\n    title: '点我恢复默认设置',\n    col_type: 'text_1',\n    url: $(['重置星星颜色', '重置选中标签颜色', '重置快速搜索', '重置首页', '重置详情页' , '重置全部设置项'], 1).select(() => {\n        return $(\"确定要\" + input + \"？\").confirm((sel) => {\n            defaultConfigs = {\n      starColor: '#ffac2d',\n      chooseColor: '#FA7298',\n      quickSearchConfigs: {\n        mode: 'scroll_button',\n        order: ['海阔搜索'],\n        海阔搜索: {\n          name: '',\n          pic: '',\n        },\n      },\n      detailsViewConfigs: {\n        use: '默认',\n        默认: {\n          config: \"eval(fetch(getVar('qdbw_file')));detailsView(type, id);\",\n        },\n      },\n      homePageConfigs: {\n        use: '默认',\n        默认: {\n          config: `let d = [];\nrequire('https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/顺搜.js'); \n顺搜(d);\n\nd.push({\n    title: '⚙️设置',\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/tubiao/main/erdi/64.png',\n    desc: '0',\n    col_type: 'text_icon',\n    url: $('hiker://empty#noHistory#').rule(() => {\n        try {\n            setPageTitle('设置');\n            eval(fetch(getVar('qdbw_file')));\n            // addListener(\"onClose\", $.toString(() => {\n            //     clearVar('qdbw_debug');\n            //     clearVar('gitversion');\n            // }))\n            settingPage();\n        } catch (e) {\n            let rule = JSON.parse(request(\"hiker://page/urgencyMode\")).rule;\n            eval(rule);\n        }\n    })\n})\n\nlet s = [\"推荐\", \"热门\", \"分类\", \"片单\", \"榜单\", \"将上映\"];\nlet img = \"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/img/\";\nfor (let i in s) {\n    d.push({\n        title: s[i],\n        img: img + s[i] + '.jpg',\n        col_type: 'icon_2',\n        url: \"hiker://empty\" + '$page{fypage}/#/' + s[i] + \"#noHistory#\"\n    })\n}\nreturn d;`,\n        },\n      },\n      analysisConfigs: {\n        use: '不解析',\n        不解析: {\n          config: $.toString(() => {\n            return input;\n          }),\n          setting: $.toString(() => {\n            return 'toast://该插件无设置页面';\n          }),\n        },\n        断插: {\n          config: $.toString(() => {\n            let file = 'hiker://files/rules/DuanNian/MyParse.json';\n            let oldfile = 'hiker://files/cache/MyParseSet.json';\n            if (fileExist(file)) {\n              eval('json=' + fetch(file));\n              let jsUrl = json.settings.cj;\n              eval(fetch(jsUrl));\n              return aytmParse(input);\n            } else if (fileExist(oldfile)) {\n              let jsUrl = JSON.parse(fetch(oldfile)).cj;\n              eval(fetch(jsUrl));\n              return aytmParse(input);\n            } else {\n              return 'toast://没找到断插配置文件';\n            }\n          }),\n          setting: $.toString(() => {\n            let file = 'hiker://files/rules/DuanNian/MyParse.json';\n            let oldfile = 'hiker://files/cache/MyParseSet.json';\n            if (fileExist(file)) {\n              eval('json=' + fetch(file));\n              let jsUrl = json.settings.cj;\n              eval(fetch(jsUrl));\n              return setUrl;\n            } else if (fileExist(oldfile)) {\n              let jsUrl = JSON.parse(fetch(oldfile)).cj;\n              eval(fetch(jsUrl));\n              return setUrl;\n            } else {\n              return 'hiker://page/Route?rule=MyFieldᴰⁿ&type=设置';\n            }\n          }),\n        },\n      },\n    };\n            let item = '';\n            switch (sel) {\n                case '重置星星颜色':\n                    item = 'starColor';\n                    break;\n                case '重置选中标签颜色':\n                    item = 'chooseColor';\n                    break;\n                case '重置快速搜索':\n                    item = 'quickSearchConfigs';\n                    break;\n                case '重置首页':\n                    item = 'homePageConfigs';\n                    break;\n                case '重置详情页':\n                    item = 'detailViewConfigs';\n                    break;\n                case '重置全部设置项':\n                    item = 'all';\n                    break;\n            }\n            // eval(fetch(getVar('qdbw_file')));\n            if (item == 'all') {\n                writeFile(getVar('qdbw_config'), JSON.stringify(defaultConfigs));\n                refreshPage();\n                return \"toast://已\" + sel;\n            } else {\n                let config = JSON.parse(fetch(getVar('qdbw_config')));\n                config[item] = defaultConfigs[item];\n                writeFile(getVar('qdbw_config'), JSON.stringify(config));\n                refreshPage();\n                return \"toast://已\" + sel;\n            }\n        }, input)\n    })\n})\nd.push({\n  title: '若重生不起作用,点我复制错误信息提交给开发者',\n  col_type: 'text_1',\n  url: 'copy://' + e.message,\n});\nsetResult(d);\n"},{"col_type":"movie_3","name":"顺佬专用详情页","path":"Sdetail","rule":"js:\nputVar('qdb_file', 'hiker://files/rules/joker/qdbw.js');\neval(fetch(getVar(\"qdbw_file\")));\npre();\nlet type = getParam('type', ''),\n    id = getParam('id', '');\ndetailsView(type, id);"}],"title":"轻豆瓣网","author":"Joker&&Reborn&&小刘","version":2023110202,"type":"video","url":"hiker://empty/","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nlet forceUrgencyMode = 0\nif (forceUrgencyMode) {\n    let e = '当前为强制急救模式'\n    let rule = JSON.parse(request(\"hiker://page/urgencyMode\")).rule;\n    eval(rule)\n} else {\n    try {\n        eval(fetch(getVar(\"qdbw_file\")));\n        home();\n    } catch (e) {\n        let rule = JSON.parse(request(\"hiker://page/urgencyMode\")).rule;\n        eval(rule)\n    }\n}","searchFind":"js:\ntry {\n    eval(fetch(getVar(\"qdbw_file\")));\n    search();\n} catch (e) {\n    let rule = JSON.parse(request(\"hiker://page/urgencyMode\")).rule;\n    eval(rule)\n}","search_url":"hiker://empty/$page{fypage}/#/**","group":"⑨视频","detail_col_type":"movie_1_vertical_pic","detail_find_rule":"js:\ntry {\n    eval(fetch(getVar(\"qdbw_file\")));\n    erji();\n} catch (e) {\n    let rule = JSON.parse(request(\"hiker://page/urgencyMode\")).rule;\n    eval(rule)\n}","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"let file = \"hiker://files/rules/joker/qdbw.js\";\nlet gitfile = 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/qdbw.js';\nlet ver = getItem('newver','');\nif (!fetch(file) || ver < MY_RULE.version) {\n    writeFile(file, request(gitfile));\n    setItem('newver',String(MY_RULE.version));\n}\nputVar({\n    key: \"qdbw_file\",\n    value: file\n});\ntry {\n    eval(fetch(file));\n    pre();\n} catch (e) {\n    let rule = JSON.parse(request(\"hiker://page/urgencyMode\")).rule;\n    eval(rule)\n}","pages":"[{\"col_type\":\"movie_3\",\"name\":\"配置编辑界面\",\"path\":\"setting-editor\",\"rule\":\"js:\\neval(request(getVar('qdbw_file')));\\nlet d = [];\\nlet configType = getVar('input_config_type');\\nif (configType === '解析插件配置') {\\n  setPageTitle('编辑解析代码');\\n  analysisModeEditPage(d);\\n} else if (configType === '影片详情页面配置') {\\n  setPageTitle('编辑影片详情页面代码');\\n  detailViewModeEditPage(d);\\n} else if (configType === '首页配置') {\\n  setPageTitle('编辑首页代码');\\n  homePageModeEditPage(d);\\n} else {\\n  setError('错误的配置');\\n}\\nsetResult(d);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"解除被封ip\",\"path\":\"releaseIP\",\"rule\":\"js:\\nlet id = getParam('id');\\nlet d = [];\\nd.push({\\n    title: '您已被封禁IP地址或触发了人机验证，请按照以下步骤处理(如不处理您将在一段时间内无法正常获取剧集列表)',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\nd.push({\\n    title: '1.点击此处导入自动获取Cookie插件',\\n    url: $()\\n        .lazyRule(() => {\\n            let getDoubanCookie = \\\"(function(){if(window['location']['host']=='www.douban.com'){fy_bridge_app['writeFile']('hiker://files/cache/doubancookie.txt',fy_bridge_app['getCookie']('https://www.douban.com/'));}if(window['location']['host']=='m.douban.com'){fy_bridge_app['writeFile']('hiker://files/cache/doubancookie.txt',fy_bridge_app['getCookie']('https://m.douban.com/'));}}());\\\"\\n            if (!fileExist('hiker://files/cache/global_getDoubanCookie.js')) {\\n                writeFile('hiker://files/cache/global_getDoubanCookie.js', getDoubanCookie);\\n            };\\n            return 'rule://' + base64Encode('海阔视界，网页插件￥js_url￥global_getDoubanCookie@hiker://files/cache/global_getDoubanCookie.js');\\n        }),\\n    col_type: 'text_1'\\n});\\nd.push({\\n    title: '2.点击此处进入网页进行登录或人机验证，完成后返回此页面',\\n    url: 'https://movie.douban.com/subject/' + id + '/',\\n    col_type: 'text_1'\\n});\\nd.push({\\n    title: '3.完成登录或人机验证后返回影片详情页面重新进入',\\n    url: 'hiker://empty',\\n    col_type: 'text_1'\\n});\\nsetResult(d)\"},{\"col_type\":\"movie_3\",\"name\":\"抢救页面\",\"path\":\"urgencyMode\",\"rule\":\"js:\\nlet d = [];\\nd.push({\\n  title: '很明显,出了一些小问题,建议重生',\\n  col_type: 'text_center_1',\\n  url: 'hiker://empty',\\n});\\nd.push({\\n  title: '点我更新依赖',\\n  col_type: 'text_1',\\n  url: $('hiker://empty').lazyRule(() => {\\n    let file = 'hiker://files/rules/joker/qdbw.js';\\n    let gitfile = 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/qdbw.js';\\n    let text = request(gitfile);\\n    writeFile(file, text);\\n    refreshPage();\\n    return 'toast://依赖文件更新成功';\\n  }),\\n});\\nd.push({\\n    title: '点我恢复默认设置',\\n    col_type: 'text_1',\\n    url: $(['重置星星颜色', '重置选中标签颜色', '重置快速搜索', '重置首页', '重置详情页' , '重置全部设置项'], 1).select(() => {\\n        return $(\\\"确定要\\\" + input + \\\"？\\\").confirm((sel) => {\\n            defaultConfigs = {\\n      starColor: '#ffac2d',\\n      chooseColor: '#FA7298',\\n      quickSearchConfigs: {\\n        mode: 'scroll_button',\\n        order: ['海阔搜索'],\\n        海阔搜索: {\\n          name: '',\\n          pic: '',\\n        },\\n      },\\n      detailsViewConfigs: {\\n        use: '默认',\\n        默认: {\\n          config: \\\"eval(fetch(getVar('qdbw_file')));detailsView(type, id);\\\",\\n        },\\n      },\\n      homePageConfigs: {\\n        use: '默认',\\n        默认: {\\n          config: `let d = [];\\nrequire('https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/顺搜.js'); \\n顺搜(d);\\n\\nd.push({\\n    title: '⚙️设置',\\n    img: 'https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/tubiao/main/erdi/64.png',\\n    desc: '0',\\n    col_type: 'text_icon',\\n    url: $('hiker://empty#noHistory#').rule(() => {\\n        try {\\n            setPageTitle('设置');\\n            eval(fetch(getVar('qdbw_file')));\\n            // addListener(\\\"onClose\\\", $.toString(() => {\\n            //     clearVar('qdbw_debug');\\n            //     clearVar('gitversion');\\n            // }))\\n            settingPage();\\n        } catch (e) {\\n            let rule = JSON.parse(request(\\\"hiker://page/urgencyMode\\\")).rule;\\n            eval(rule);\\n        }\\n    })\\n})\\n\\nlet s = [\\\"推荐\\\", \\\"热门\\\", \\\"分类\\\", \\\"片单\\\", \\\"榜单\\\", \\\"将上映\\\"];\\nlet img = \\\"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/img/\\\";\\nfor (let i in s) {\\n    d.push({\\n        title: s[i],\\n        img: img + s[i] + '.jpg',\\n        col_type: 'icon_2',\\n        url: \\\"hiker://empty\\\" + '$page{fypage}/#/' + s[i] + \\\"#noHistory#\\\"\\n    })\\n}\\nreturn d;`,\\n        },\\n      },\\n      analysisConfigs: {\\n        use: '不解析',\\n        不解析: {\\n          config: $.toString(() => {\\n            return input;\\n          }),\\n          setting: $.toString(() => {\\n            return 'toast://该插件无设置页面';\\n          }),\\n        },\\n        断插: {\\n          config: $.toString(() => {\\n            let file = 'hiker://files/rules/DuanNian/MyParse.json';\\n            let oldfile = 'hiker://files/cache/MyParseSet.json';\\n            if (fileExist(file)) {\\n              eval('json=' + fetch(file));\\n              let jsUrl = json.settings.cj;\\n              eval(fetch(jsUrl));\\n              return aytmParse(input);\\n            } else if (fileExist(oldfile)) {\\n              let jsUrl = JSON.parse(fetch(oldfile)).cj;\\n              eval(fetch(jsUrl));\\n              return aytmParse(input);\\n            } else {\\n              return 'toast://没找到断插配置文件';\\n            }\\n          }),\\n          setting: $.toString(() => {\\n            let file = 'hiker://files/rules/DuanNian/MyParse.json';\\n            let oldfile = 'hiker://files/cache/MyParseSet.json';\\n            if (fileExist(file)) {\\n              eval('json=' + fetch(file));\\n              let jsUrl = json.settings.cj;\\n              eval(fetch(jsUrl));\\n              return setUrl;\\n            } else if (fileExist(oldfile)) {\\n              let jsUrl = JSON.parse(fetch(oldfile)).cj;\\n              eval(fetch(jsUrl));\\n              return setUrl;\\n            } else {\\n              return 'hiker://page/Route?rule=MyFieldᴰⁿ&type=设置';\\n            }\\n          }),\\n        },\\n      },\\n    };\\n            let item = '';\\n            switch (sel) {\\n                case '重置星星颜色':\\n                    item = 'starColor';\\n                    break;\\n                case '重置选中标签颜色':\\n                    item = 'chooseColor';\\n                    break;\\n                case '重置快速搜索':\\n                    item = 'quickSearchConfigs';\\n                    break;\\n                case '重置首页':\\n                    item = 'homePageConfigs';\\n                    break;\\n                case '重置详情页':\\n                    item = 'detailViewConfigs';\\n                    break;\\n                case '重置全部设置项':\\n                    item = 'all';\\n                    break;\\n            }\\n            // eval(fetch(getVar('qdbw_file')));\\n            if (item == 'all') {\\n                writeFile(getVar('qdbw_config'), JSON.stringify(defaultConfigs));\\n                refreshPage();\\n                return \\\"toast://已\\\" + sel;\\n            } else {\\n                let config = JSON.parse(fetch(getVar('qdbw_config')));\\n                config[item] = defaultConfigs[item];\\n                writeFile(getVar('qdbw_config'), JSON.stringify(config));\\n                refreshPage();\\n                return \\\"toast://已\\\" + sel;\\n            }\\n        }, input)\\n    })\\n})\\nd.push({\\n  title: '若重生不起作用,点我复制错误信息提交给开发者',\\n  col_type: 'text_1',\\n  url: 'copy://' + e.message,\\n});\\nsetResult(d);\\n\"},{\"col_type\":\"movie_3\",\"name\":\"顺佬专用详情页\",\"path\":\"Sdetail\",\"rule\":\"js:\\nputVar('qdb_file', 'hiker://files/rules/joker/qdbw.js');\\neval(fetch(getVar(\\\"qdbw_file\\\")));\\npre();\\nlet type = getParam('type', ''),\\n    id = getParam('id', '');\\ndetailsView(type, id);\"}]","proxy":"","icon":"https://ghproxy.net/https://raw.githubusercontent.com/ls125781003/hikerdbw/master/img/青豆.png"}